/*
* generated by Xtext
*/
grammar InternalPig;

options {
	superClass=AbstractInternalContentAssistParser;
	
}

@lexer::header {
package org.apache.pigeditor.ui.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package org.apache.pigeditor.ui.contentassist.antlr.internal; 

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.xtext.parsetree.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.DFA;
import org.apache.pigeditor.services.PigGrammarAccess;

}

@parser::members {
 
 	private PigGrammarAccess grammarAccess;
 	
    public void setGrammarAccess(PigGrammarAccess grammarAccess) {
    	this.grammarAccess = grammarAccess;
    }
    
    @Override
    protected Grammar getGrammar() {
    	return grammarAccess.getGrammar();
    }
    
    @Override
    protected String getValueForTokenName(String tokenName) {
    	return tokenName;
    }

}




// Entry rule entryRuleQuery
entryRuleQuery 
:
{ before(grammarAccess.getQueryRule()); }
	 ruleQuery
{ after(grammarAccess.getQueryRule()); } 
	 EOF 
;

// Rule Query
ruleQuery
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getQueryAccess().getElementsAssignment()); }
(rule__Query__ElementsAssignment)*
{ after(grammarAccess.getQueryAccess().getElementsAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleStatement
entryRuleStatement 
:
{ before(grammarAccess.getStatementRule()); }
	 ruleStatement
{ after(grammarAccess.getStatementRule()); } 
	 EOF 
;

// Rule Statement
ruleStatement
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getStatementAccess().getAlternatives()); }
(rule__Statement__Alternatives)
{ after(grammarAccess.getStatementAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleDefineStatement
entryRuleDefineStatement 
:
{ before(grammarAccess.getDefineStatementRule()); }
	 ruleDefineStatement
{ after(grammarAccess.getDefineStatementRule()); } 
	 EOF 
;

// Rule DefineStatement
ruleDefineStatement
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getDefineStatementAccess().getAlternatives()); }
(rule__DefineStatement__Alternatives)
{ after(grammarAccess.getDefineStatementAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleLoadStatement
entryRuleLoadStatement 
:
{ before(grammarAccess.getLoadStatementRule()); }
	 ruleLoadStatement
{ after(grammarAccess.getLoadStatementRule()); } 
	 EOF 
;

// Rule LoadStatement
ruleLoadStatement
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getLoadStatementAccess().getGroup()); }
(rule__LoadStatement__Group__0)
{ after(grammarAccess.getLoadStatementAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleForeachStatement
entryRuleForeachStatement 
:
{ before(grammarAccess.getForeachStatementRule()); }
	 ruleForeachStatement
{ after(grammarAccess.getForeachStatementRule()); } 
	 EOF 
;

// Rule ForeachStatement
ruleForeachStatement
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getForeachStatementAccess().getGroup()); }
(rule__ForeachStatement__Group__0)
{ after(grammarAccess.getForeachStatementAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleFilterStatement
entryRuleFilterStatement 
:
{ before(grammarAccess.getFilterStatementRule()); }
	 ruleFilterStatement
{ after(grammarAccess.getFilterStatementRule()); } 
	 EOF 
;

// Rule FilterStatement
ruleFilterStatement
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getFilterStatementAccess().getGroup()); }
(rule__FilterStatement__Group__0)
{ after(grammarAccess.getFilterStatementAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleGroupByStatement
entryRuleGroupByStatement 
:
{ before(grammarAccess.getGroupByStatementRule()); }
	 ruleGroupByStatement
{ after(grammarAccess.getGroupByStatementRule()); } 
	 EOF 
;

// Rule GroupByStatement
ruleGroupByStatement
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getGroupByStatementAccess().getGroup()); }
(rule__GroupByStatement__Group__0)
{ after(grammarAccess.getGroupByStatementAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleCoGroupByStatement
entryRuleCoGroupByStatement 
:
{ before(grammarAccess.getCoGroupByStatementRule()); }
	 ruleCoGroupByStatement
{ after(grammarAccess.getCoGroupByStatementRule()); } 
	 EOF 
;

// Rule CoGroupByStatement
ruleCoGroupByStatement
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getCoGroupByStatementAccess().getGroup()); }
(rule__CoGroupByStatement__Group__0)
{ after(grammarAccess.getCoGroupByStatementAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleOrderStatement
entryRuleOrderStatement 
:
{ before(grammarAccess.getOrderStatementRule()); }
	 ruleOrderStatement
{ after(grammarAccess.getOrderStatementRule()); } 
	 EOF 
;

// Rule OrderStatement
ruleOrderStatement
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getOrderStatementAccess().getGroup()); }
(rule__OrderStatement__Group__0)
{ after(grammarAccess.getOrderStatementAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleCrossStatement
entryRuleCrossStatement 
:
{ before(grammarAccess.getCrossStatementRule()); }
	 ruleCrossStatement
{ after(grammarAccess.getCrossStatementRule()); } 
	 EOF 
;

// Rule CrossStatement
ruleCrossStatement
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getCrossStatementAccess().getGroup()); }
(rule__CrossStatement__Group__0)
{ after(grammarAccess.getCrossStatementAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleUnionStatement
entryRuleUnionStatement 
:
{ before(grammarAccess.getUnionStatementRule()); }
	 ruleUnionStatement
{ after(grammarAccess.getUnionStatementRule()); } 
	 EOF 
;

// Rule UnionStatement
ruleUnionStatement
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getUnionStatementAccess().getGroup()); }
(rule__UnionStatement__Group__0)
{ after(grammarAccess.getUnionStatementAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleJoinStatement
entryRuleJoinStatement 
:
{ before(grammarAccess.getJoinStatementRule()); }
	 ruleJoinStatement
{ after(grammarAccess.getJoinStatementRule()); } 
	 EOF 
;

// Rule JoinStatement
ruleJoinStatement
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getJoinStatementAccess().getGroup()); }
(rule__JoinStatement__Group__0)
{ after(grammarAccess.getJoinStatementAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleLimitStatement
entryRuleLimitStatement 
:
{ before(grammarAccess.getLimitStatementRule()); }
	 ruleLimitStatement
{ after(grammarAccess.getLimitStatementRule()); } 
	 EOF 
;

// Rule LimitStatement
ruleLimitStatement
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getLimitStatementAccess().getGroup()); }
(rule__LimitStatement__Group__0)
{ after(grammarAccess.getLimitStatementAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleSampleStatement
entryRuleSampleStatement 
:
{ before(grammarAccess.getSampleStatementRule()); }
	 ruleSampleStatement
{ after(grammarAccess.getSampleStatementRule()); } 
	 EOF 
;

// Rule SampleStatement
ruleSampleStatement
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getSampleStatementAccess().getGroup()); }
(rule__SampleStatement__Group__0)
{ after(grammarAccess.getSampleStatementAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleDistinctStatement
entryRuleDistinctStatement 
:
{ before(grammarAccess.getDistinctStatementRule()); }
	 ruleDistinctStatement
{ after(grammarAccess.getDistinctStatementRule()); } 
	 EOF 
;

// Rule DistinctStatement
ruleDistinctStatement
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getDistinctStatementAccess().getGroup()); }
(rule__DistinctStatement__Group__0)
{ after(grammarAccess.getDistinctStatementAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleStreamStatement
entryRuleStreamStatement 
:
{ before(grammarAccess.getStreamStatementRule()); }
	 ruleStreamStatement
{ after(grammarAccess.getStreamStatementRule()); } 
	 EOF 
;

// Rule StreamStatement
ruleStreamStatement
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getStreamStatementAccess().getGroup()); }
(rule__StreamStatement__Group__0)
{ after(grammarAccess.getStreamStatementAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleMrStatement
entryRuleMrStatement 
:
{ before(grammarAccess.getMrStatementRule()); }
	 ruleMrStatement
{ after(grammarAccess.getMrStatementRule()); } 
	 EOF 
;

// Rule MrStatement
ruleMrStatement
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getMrStatementAccess().getGroup()); }
(rule__MrStatement__Group__0)
{ after(grammarAccess.getMrStatementAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleSplitStatement
entryRuleSplitStatement 
:
{ before(grammarAccess.getSplitStatementRule()); }
	 ruleSplitStatement
{ after(grammarAccess.getSplitStatementRule()); } 
	 EOF 
;

// Rule SplitStatement
ruleSplitStatement
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getSplitStatementAccess().getGroup()); }
(rule__SplitStatement__Group__0)
{ after(grammarAccess.getSplitStatementAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleStoreStatement
entryRuleStoreStatement 
:
{ before(grammarAccess.getStoreStatementRule()); }
	 ruleStoreStatement
{ after(grammarAccess.getStoreStatementRule()); } 
	 EOF 
;

// Rule StoreStatement
ruleStoreStatement
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getStoreStatementAccess().getGroup()); }
(rule__StoreStatement__Group__0)
{ after(grammarAccess.getStoreStatementAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleDescribeStatement
entryRuleDescribeStatement 
:
{ before(grammarAccess.getDescribeStatementRule()); }
	 ruleDescribeStatement
{ after(grammarAccess.getDescribeStatementRule()); } 
	 EOF 
;

// Rule DescribeStatement
ruleDescribeStatement
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getDescribeStatementAccess().getGroup()); }
(rule__DescribeStatement__Group__0)
{ after(grammarAccess.getDescribeStatementAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleExplainStatement
entryRuleExplainStatement 
:
{ before(grammarAccess.getExplainStatementRule()); }
	 ruleExplainStatement
{ after(grammarAccess.getExplainStatementRule()); } 
	 EOF 
;

// Rule ExplainStatement
ruleExplainStatement
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getExplainStatementAccess().getGroup()); }
(rule__ExplainStatement__Group__0)
{ after(grammarAccess.getExplainStatementAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleDumpStatement
entryRuleDumpStatement 
:
{ before(grammarAccess.getDumpStatementRule()); }
	 ruleDumpStatement
{ after(grammarAccess.getDumpStatementRule()); } 
	 EOF 
;

// Rule DumpStatement
ruleDumpStatement
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getDumpStatementAccess().getGroup()); }
(rule__DumpStatement__Group__0)
{ after(grammarAccess.getDumpStatementAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleCondition
entryRuleCondition 
:
{ before(grammarAccess.getConditionRule()); }
	 ruleCondition
{ after(grammarAccess.getConditionRule()); } 
	 EOF 
;

// Rule Condition
ruleCondition
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getConditionAccess().getGroup()); }
(rule__Condition__Group__0)
{ after(grammarAccess.getConditionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleOrCondition
entryRuleOrCondition 
:
{ before(grammarAccess.getOrConditionRule()); }
	 ruleOrCondition
{ after(grammarAccess.getOrConditionRule()); } 
	 EOF 
;

// Rule OrCondition
ruleOrCondition
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getOrConditionAccess().getGroup()); }
(rule__OrCondition__Group__0)
{ after(grammarAccess.getOrConditionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAndCondition
entryRuleAndCondition 
:
{ before(grammarAccess.getAndConditionRule()); }
	 ruleAndCondition
{ after(grammarAccess.getAndConditionRule()); } 
	 EOF 
;

// Rule AndCondition
ruleAndCondition
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAndConditionAccess().getGroup()); }
(rule__AndCondition__Group__0)
{ after(grammarAccess.getAndConditionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleUnaryCondition
entryRuleUnaryCondition 
:
{ before(grammarAccess.getUnaryConditionRule()); }
	 ruleUnaryCondition
{ after(grammarAccess.getUnaryConditionRule()); } 
	 EOF 
;

// Rule UnaryCondition
ruleUnaryCondition
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getUnaryConditionAccess().getAlternatives()); }
(rule__UnaryCondition__Alternatives)
{ after(grammarAccess.getUnaryConditionAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleTE
entryRuleTE 
:
{ before(grammarAccess.getTERule()); }
	 ruleTE
{ after(grammarAccess.getTERule()); } 
	 EOF 
;

// Rule TE
ruleTE
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getTEAccess().getGroup()); }
(rule__TE__Group__0)
{ after(grammarAccess.getTEAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulefunc_eval
entryRulefunc_eval 
:
{ before(grammarAccess.getFunc_evalRule()); }
	 rulefunc_eval
{ after(grammarAccess.getFunc_evalRule()); } 
	 EOF 
;

// Rule func_eval
rulefunc_eval
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getFunc_evalAccess().getGroup()); }
(rule__Func_eval__Group__0)
{ after(grammarAccess.getFunc_evalAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulereal_arg_list
entryRulereal_arg_list 
:
{ before(grammarAccess.getReal_arg_listRule()); }
	 rulereal_arg_list
{ after(grammarAccess.getReal_arg_listRule()); } 
	 EOF 
;

// Rule real_arg_list
rulereal_arg_list
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getReal_arg_listAccess().getGroup()); }
(rule__Real_arg_list__Group__0)
{ after(grammarAccess.getReal_arg_listAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulereal_arg
entryRulereal_arg 
:
{ before(grammarAccess.getReal_argRule()); }
	 rulereal_arg
{ after(grammarAccess.getReal_argRule()); } 
	 EOF 
;

// Rule real_arg
rulereal_arg
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getReal_argAccess().getAlternatives()); }
(rule__Real_arg__Alternatives)
{ after(grammarAccess.getReal_argAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleExpression
entryRuleExpression 
:
{ before(grammarAccess.getExpressionRule()); }
	 ruleExpression
{ after(grammarAccess.getExpressionRule()); } 
	 EOF 
;

// Rule Expression
ruleExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getExpressionAccess().getGroup()); }
(rule__Expression__Group__0)
{ after(grammarAccess.getExpressionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAddExpression
entryRuleAddExpression 
:
{ before(grammarAccess.getAddExpressionRule()); }
	 ruleAddExpression
{ after(grammarAccess.getAddExpressionRule()); } 
	 EOF 
;

// Rule AddExpression
ruleAddExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAddExpressionAccess().getGroup()); }
(rule__AddExpression__Group__0)
{ after(grammarAccess.getAddExpressionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulemulti_expr
entryRulemulti_expr 
:
{ before(grammarAccess.getMulti_exprRule()); }
	 rulemulti_expr
{ after(grammarAccess.getMulti_exprRule()); } 
	 EOF 
;

// Rule multi_expr
rulemulti_expr
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getMulti_exprAccess().getGroup()); }
(rule__Multi_expr__Group__0)
{ after(grammarAccess.getMulti_exprAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulecast_expr
entryRulecast_expr 
:
{ before(grammarAccess.getCast_exprRule()); }
	 rulecast_expr
{ after(grammarAccess.getCast_exprRule()); } 
	 EOF 
;

// Rule cast_expr
rulecast_expr
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getCast_exprAccess().getUnary_exprParserRuleCall()); }
	ruleunary_expr
{ after(grammarAccess.getCast_exprAccess().getUnary_exprParserRuleCall()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleunary_expr
entryRuleunary_expr 
:
{ before(grammarAccess.getUnary_exprRule()); }
	 ruleunary_expr
{ after(grammarAccess.getUnary_exprRule()); } 
	 EOF 
;

// Rule unary_expr
ruleunary_expr
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getUnary_exprAccess().getAlternatives()); }
(rule__Unary_expr__Alternatives)
{ after(grammarAccess.getUnary_exprAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleexpr_eval
entryRuleexpr_eval 
:
{ before(grammarAccess.getExpr_evalRule()); }
	 ruleexpr_eval
{ after(grammarAccess.getExpr_evalRule()); } 
	 EOF 
;

// Rule expr_eval
ruleexpr_eval
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getExpr_evalAccess().getAlternatives()); }
(rule__Expr_eval__Alternatives)
{ after(grammarAccess.getExpr_evalAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulevar_expr
entryRulevar_expr 
:
{ before(grammarAccess.getVar_exprRule()); }
	 rulevar_expr
{ after(grammarAccess.getVar_exprRule()); } 
	 EOF 
;

// Rule var_expr
rulevar_expr
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getVar_exprAccess().getGroup()); }
(rule__Var_expr__Group__0)
{ after(grammarAccess.getVar_exprAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleprojectable_expr
entryRuleprojectable_expr 
:
{ before(grammarAccess.getProjectable_exprRule()); }
	 ruleprojectable_expr
{ after(grammarAccess.getProjectable_exprRule()); } 
	 EOF 
;

// Rule projectable_expr
ruleprojectable_expr
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getProjectable_exprAccess().getAlternatives()); }
(rule__Projectable_expr__Alternatives)
{ after(grammarAccess.getProjectable_exprAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuledot_proj
entryRuledot_proj 
:
{ before(grammarAccess.getDot_projRule()); }
	 ruledot_proj
{ after(grammarAccess.getDot_projRule()); } 
	 EOF 
;

// Rule dot_proj
ruledot_proj
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getDot_projAccess().getGroup()); }
(rule__Dot_proj__Group__0)
{ after(grammarAccess.getDot_projAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulecol_alias_or_index
entryRulecol_alias_or_index 
:
{ before(grammarAccess.getCol_alias_or_indexRule()); }
	 rulecol_alias_or_index
{ after(grammarAccess.getCol_alias_or_indexRule()); } 
	 EOF 
;

// Rule col_alias_or_index
rulecol_alias_or_index
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getCol_alias_or_indexAccess().getAlternatives()); }
(rule__Col_alias_or_index__Alternatives)
{ after(grammarAccess.getCol_alias_or_indexAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulecol_alias
entryRulecol_alias 
:
{ before(grammarAccess.getCol_aliasRule()); }
	 rulecol_alias
{ after(grammarAccess.getCol_aliasRule()); } 
	 EOF 
;

// Rule col_alias
rulecol_alias
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getCol_aliasAccess().getIDENTIFIERParserRuleCall()); }
	ruleIDENTIFIER
{ after(grammarAccess.getCol_aliasAccess().getIDENTIFIERParserRuleCall()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulecol_index
entryRulecol_index 
:
{ before(grammarAccess.getCol_indexRule()); }
	 rulecol_index
{ after(grammarAccess.getCol_indexRule()); } 
	 EOF 
;

// Rule col_index
rulecol_index
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getCol_indexAccess().getGroup()); }
(rule__Col_index__Group__0)
{ after(grammarAccess.getCol_indexAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulepound_proj
entryRulepound_proj 
:
{ before(grammarAccess.getPound_projRule()); }
	 rulepound_proj
{ after(grammarAccess.getPound_projRule()); } 
	 EOF 
;

// Rule pound_proj
rulepound_proj
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getPound_projAccess().getGroup()); }
(rule__Pound_proj__Group__0)
{ after(grammarAccess.getPound_projAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}





// Entry rule entryRuleneg_expr
entryRuleneg_expr 
:
{ before(grammarAccess.getNeg_exprRule()); }
	 ruleneg_expr
{ after(grammarAccess.getNeg_exprRule()); } 
	 EOF 
;

// Rule neg_expr
ruleneg_expr
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getNeg_exprAccess().getGroup()); }
(rule__Neg_expr__Group__0)
{ after(grammarAccess.getNeg_exprAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulerel_op
entryRulerel_op 
:
{ before(grammarAccess.getRel_opRule()); }
	 rulerel_op
{ after(grammarAccess.getRel_opRule()); } 
	 EOF 
;

// Rule rel_op
rulerel_op
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getRel_opAccess().getAlternatives()); }
(rule__Rel_op__Alternatives)
{ after(grammarAccess.getRel_opAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulerel_op_eq
entryRulerel_op_eq 
:
{ before(grammarAccess.getRel_op_eqRule()); }
	 rulerel_op_eq
{ after(grammarAccess.getRel_op_eqRule()); } 
	 EOF 
;

// Rule rel_op_eq
rulerel_op_eq
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getRel_op_eqAccess().getAlternatives()); }
(rule__Rel_op_eq__Alternatives)
{ after(grammarAccess.getRel_op_eqAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulerel_op_ne
entryRulerel_op_ne 
:
{ before(grammarAccess.getRel_op_neRule()); }
	 rulerel_op_ne
{ after(grammarAccess.getRel_op_neRule()); } 
	 EOF 
;

// Rule rel_op_ne
rulerel_op_ne
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getRel_op_neAccess().getAlternatives()); }
(rule__Rel_op_ne__Alternatives)
{ after(grammarAccess.getRel_op_neAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulerel_op_gt
entryRulerel_op_gt 
:
{ before(grammarAccess.getRel_op_gtRule()); }
	 rulerel_op_gt
{ after(grammarAccess.getRel_op_gtRule()); } 
	 EOF 
;

// Rule rel_op_gt
rulerel_op_gt
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getRel_op_gtAccess().getAlternatives()); }
(rule__Rel_op_gt__Alternatives)
{ after(grammarAccess.getRel_op_gtAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulerel_op_gte
entryRulerel_op_gte 
:
{ before(grammarAccess.getRel_op_gteRule()); }
	 rulerel_op_gte
{ after(grammarAccess.getRel_op_gteRule()); } 
	 EOF 
;

// Rule rel_op_gte
rulerel_op_gte
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getRel_op_gteAccess().getAlternatives()); }
(rule__Rel_op_gte__Alternatives)
{ after(grammarAccess.getRel_op_gteAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulerel_op_lt
entryRulerel_op_lt 
:
{ before(grammarAccess.getRel_op_ltRule()); }
	 rulerel_op_lt
{ after(grammarAccess.getRel_op_ltRule()); } 
	 EOF 
;

// Rule rel_op_lt
rulerel_op_lt
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getRel_op_ltAccess().getAlternatives()); }
(rule__Rel_op_lt__Alternatives)
{ after(grammarAccess.getRel_op_ltAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulerel_op_lte
entryRulerel_op_lte 
:
{ before(grammarAccess.getRel_op_lteRule()); }
	 rulerel_op_lte
{ after(grammarAccess.getRel_op_lteRule()); } 
	 EOF 
;

// Rule rel_op_lte
rulerel_op_lte
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getRel_op_lteAccess().getAlternatives()); }
(rule__Rel_op_lte__Alternatives)
{ after(grammarAccess.getRel_op_lteAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAliasType
entryRuleAliasType 
:
{ before(grammarAccess.getAliasTypeRule()); }
	 ruleAliasType
{ after(grammarAccess.getAliasTypeRule()); } 
	 EOF 
;

// Rule AliasType
ruleAliasType
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAliasTypeAccess().getReferencedAssignment()); }
(rule__AliasType__ReferencedAssignment)
{ after(grammarAccess.getAliasTypeAccess().getReferencedAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleFlattenGeneratedItem
entryRuleFlattenGeneratedItem 
:
{ before(grammarAccess.getFlattenGeneratedItemRule()); }
	 ruleFlattenGeneratedItem
{ after(grammarAccess.getFlattenGeneratedItemRule()); } 
	 EOF 
;

// Rule FlattenGeneratedItem
ruleFlattenGeneratedItem
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getFlattenGeneratedItemAccess().getGroup()); }
(rule__FlattenGeneratedItem__Group__0)
{ after(grammarAccess.getFlattenGeneratedItemAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleCommentStatement
entryRuleCommentStatement 
:
{ before(grammarAccess.getCommentStatementRule()); }
	 ruleCommentStatement
{ after(grammarAccess.getCommentStatementRule()); } 
	 EOF 
;

// Rule CommentStatement
ruleCommentStatement
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getCommentStatementAccess().getSL_COMMENTTerminalRuleCall()); }
	RULE_SL_COMMENT
{ after(grammarAccess.getCommentStatementAccess().getSL_COMMENTTerminalRuleCall()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAlias
entryRuleAlias 
:
{ before(grammarAccess.getAliasRule()); }
	 ruleAlias
{ after(grammarAccess.getAliasRule()); } 
	 EOF 
;

// Rule Alias
ruleAlias
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAliasAccess().getIDTerminalRuleCall()); }
	RULE_ID
{ after(grammarAccess.getAliasAccess().getIDTerminalRuleCall()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleParallelClause
entryRuleParallelClause 
:
{ before(grammarAccess.getParallelClauseRule()); }
	 ruleParallelClause
{ after(grammarAccess.getParallelClauseRule()); } 
	 EOF 
;

// Rule ParallelClause
ruleParallelClause
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getParallelClauseAccess().getGroup()); }
(rule__ParallelClause__Group__0)
{ after(grammarAccess.getParallelClauseAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleRegisterClause
entryRuleRegisterClause 
:
{ before(grammarAccess.getRegisterClauseRule()); }
	 ruleRegisterClause
{ after(grammarAccess.getRegisterClauseRule()); } 
	 EOF 
;

// Rule RegisterClause
ruleRegisterClause
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getRegisterClauseAccess().getGroup()); }
(rule__RegisterClause__Group__0)
{ after(grammarAccess.getRegisterClauseAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleDefaultClause
entryRuleDefaultClause 
:
{ before(grammarAccess.getDefaultClauseRule()); }
	 ruleDefaultClause
{ after(grammarAccess.getDefaultClauseRule()); } 
	 EOF 
;

// Rule DefaultClause
ruleDefaultClause
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getDefaultClauseAccess().getGroup()); }
(rule__DefaultClause__Group__0)
{ after(grammarAccess.getDefaultClauseAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleDeclareClause
entryRuleDeclareClause 
:
{ before(grammarAccess.getDeclareClauseRule()); }
	 ruleDeclareClause
{ after(grammarAccess.getDeclareClauseRule()); } 
	 EOF 
;

// Rule DeclareClause
ruleDeclareClause
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getDeclareClauseAccess().getGroup()); }
(rule__DeclareClause__Group__0)
{ after(grammarAccess.getDeclareClauseAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleDefineClause
entryRuleDefineClause 
:
{ before(grammarAccess.getDefineClauseRule()); }
	 ruleDefineClause
{ after(grammarAccess.getDefineClauseRule()); } 
	 EOF 
;

// Rule DefineClause
ruleDefineClause
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getDefineClauseAccess().getGroup()); }
(rule__DefineClause__Group__0)
{ after(grammarAccess.getDefineClauseAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleLoadUsing
entryRuleLoadUsing 
:
{ before(grammarAccess.getLoadUsingRule()); }
	 ruleLoadUsing
{ after(grammarAccess.getLoadUsingRule()); } 
	 EOF 
;

// Rule LoadUsing
ruleLoadUsing
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getLoadUsingAccess().getGroup()); }
(rule__LoadUsing__Group__0)
{ after(grammarAccess.getLoadUsingAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleFuncClause
entryRuleFuncClause 
:
{ before(grammarAccess.getFuncClauseRule()); }
	 ruleFuncClause
{ after(grammarAccess.getFuncClauseRule()); } 
	 EOF 
;

// Rule FuncClause
ruleFuncClause
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getFuncClauseAccess().getGroup()); }
(rule__FuncClause__Group__0)
{ after(grammarAccess.getFuncClauseAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleFuncName
entryRuleFuncName 
:
{ before(grammarAccess.getFuncNameRule()); }
	 ruleFuncName
{ after(grammarAccess.getFuncNameRule()); } 
	 EOF 
;

// Rule FuncName
ruleFuncName
    @init {
		int stackSize = keepStackSize();
    }
	:
(
(
{ before(grammarAccess.getFuncNameAccess().getAlternatives()); }
(rule__FuncName__Alternatives)
{ after(grammarAccess.getFuncNameAccess().getAlternatives()); }
)
(
{ before(grammarAccess.getFuncNameAccess().getAlternatives()); }
(rule__FuncName__Alternatives)*
{ after(grammarAccess.getFuncNameAccess().getAlternatives()); }
)
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulePathClause
entryRulePathClause 
:
{ before(grammarAccess.getPathClauseRule()); }
	 rulePathClause
{ after(grammarAccess.getPathClauseRule()); } 
	 EOF 
;

// Rule PathClause
rulePathClause
    @init {
		int stackSize = keepStackSize();
    }
	:
(
(
{ before(grammarAccess.getPathClauseAccess().getAlternatives()); }
(rule__PathClause__Alternatives)
{ after(grammarAccess.getPathClauseAccess().getAlternatives()); }
)
(
{ before(grammarAccess.getPathClauseAccess().getAlternatives()); }
(rule__PathClause__Alternatives)*
{ after(grammarAccess.getPathClauseAccess().getAlternatives()); }
)
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAsClause
entryRuleAsClause 
:
{ before(grammarAccess.getAsClauseRule()); }
	 ruleAsClause
{ after(grammarAccess.getAsClauseRule()); } 
	 EOF 
;

// Rule AsClause
ruleAsClause
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAsClauseAccess().getGroup()); }
(rule__AsClause__Group__0)
{ after(grammarAccess.getAsClauseAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAliasDef
entryRuleAliasDef 
:
{ before(grammarAccess.getAliasDefRule()); }
	 ruleAliasDef
{ after(grammarAccess.getAliasDefRule()); } 
	 EOF 
;

// Rule AliasDef
ruleAliasDef
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAliasDefAccess().getGroup()); }
(rule__AliasDef__Group__0)
{ after(grammarAccess.getAliasDefAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAliasDefList
entryRuleAliasDefList 
:
{ before(grammarAccess.getAliasDefListRule()); }
	 ruleAliasDefList
{ after(grammarAccess.getAliasDefListRule()); } 
	 EOF 
;

// Rule AliasDefList
ruleAliasDefList
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAliasDefListAccess().getGroup()); }
(rule__AliasDefList__Group__0)
{ after(grammarAccess.getAliasDefListAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleIDENTIFIER
entryRuleIDENTIFIER 
:
{ before(grammarAccess.getIDENTIFIERRule()); }
	 ruleIDENTIFIER
{ after(grammarAccess.getIDENTIFIERRule()); } 
	 EOF 
;

// Rule IDENTIFIER
ruleIDENTIFIER
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getIDENTIFIERAccess().getIDTerminalRuleCall()); }
	RULE_ID
{ after(grammarAccess.getIDENTIFIERAccess().getIDTerminalRuleCall()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleFieldDef
entryRuleFieldDef 
:
{ before(grammarAccess.getFieldDefRule()); }
	 ruleFieldDef
{ after(grammarAccess.getFieldDefRule()); } 
	 EOF 
;

// Rule FieldDef
ruleFieldDef
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getFieldDefAccess().getGroup()); }
(rule__FieldDef__Group__0)
{ after(grammarAccess.getFieldDefAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleFieldFefList
entryRuleFieldFefList 
:
{ before(grammarAccess.getFieldFefListRule()); }
	 ruleFieldFefList
{ after(grammarAccess.getFieldFefListRule()); } 
	 EOF 
;

// Rule FieldFefList
ruleFieldFefList
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getFieldFefListAccess().getGroup()); }
(rule__FieldFefList__Group__0)
{ after(grammarAccess.getFieldFefListAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleType
entryRuleType 
:
{ before(grammarAccess.getTypeRule()); }
	 ruleType
{ after(grammarAccess.getTypeRule()); } 
	 EOF 
;

// Rule Type
ruleType
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getTypeAccess().getAlternatives()); }
(rule__Type__Alternatives)
{ after(grammarAccess.getTypeAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleSimpleType
entryRuleSimpleType 
:
{ before(grammarAccess.getSimpleTypeRule()); }
	 ruleSimpleType
{ after(grammarAccess.getSimpleTypeRule()); } 
	 EOF 
;

// Rule SimpleType
ruleSimpleType
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getSimpleTypeAccess().getAlternatives()); }
(rule__SimpleType__Alternatives)
{ after(grammarAccess.getSimpleTypeAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleTupleType
entryRuleTupleType 
:
{ before(grammarAccess.getTupleTypeRule()); }
	 ruleTupleType
{ after(grammarAccess.getTupleTypeRule()); } 
	 EOF 
;

// Rule TupleType
ruleTupleType
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getTupleTypeAccess().getGroup()); }
(rule__TupleType__Group__0)
{ after(grammarAccess.getTupleTypeAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulebag_type
entryRulebag_type 
:
{ before(grammarAccess.getBag_typeRule()); }
	 rulebag_type
{ after(grammarAccess.getBag_typeRule()); } 
	 EOF 
;

// Rule bag_type
rulebag_type
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getBag_typeAccess().getGroup()); }
(rule__Bag_type__Group__0)
{ after(grammarAccess.getBag_typeAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleMapType
entryRuleMapType 
:
{ before(grammarAccess.getMapTypeRule()); }
	 ruleMapType
{ after(grammarAccess.getMapTypeRule()); } 
	 EOF 
;

// Rule MapType
ruleMapType
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getMapTypeAccess().getMAPKeyword()); }

	'MAP[]' 

{ after(grammarAccess.getMapTypeAccess().getMAPKeyword()); }
)

;
finally {
	restoreStackSize(stackSize);
}





// Entry rule entryRuleSTR_OP_EQ
entryRuleSTR_OP_EQ 
:
{ before(grammarAccess.getSTR_OP_EQRule()); }
	 ruleSTR_OP_EQ
{ after(grammarAccess.getSTR_OP_EQRule()); } 
	 EOF 
;

// Rule STR_OP_EQ
ruleSTR_OP_EQ
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getSTR_OP_EQAccess().getEQKeyword()); }

	'EQ' 

{ after(grammarAccess.getSTR_OP_EQAccess().getEQKeyword()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleSTR_OP_GT
entryRuleSTR_OP_GT 
:
{ before(grammarAccess.getSTR_OP_GTRule()); }
	 ruleSTR_OP_GT
{ after(grammarAccess.getSTR_OP_GTRule()); } 
	 EOF 
;

// Rule STR_OP_GT
ruleSTR_OP_GT
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getSTR_OP_GTAccess().getGTKeyword()); }

	'GT' 

{ after(grammarAccess.getSTR_OP_GTAccess().getGTKeyword()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleSTR_OP_LT
entryRuleSTR_OP_LT 
:
{ before(grammarAccess.getSTR_OP_LTRule()); }
	 ruleSTR_OP_LT
{ after(grammarAccess.getSTR_OP_LTRule()); } 
	 EOF 
;

// Rule STR_OP_LT
ruleSTR_OP_LT
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getSTR_OP_LTAccess().getLTKeyword()); }

	'LT' 

{ after(grammarAccess.getSTR_OP_LTAccess().getLTKeyword()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleSTR_OP_GTE
entryRuleSTR_OP_GTE 
:
{ before(grammarAccess.getSTR_OP_GTERule()); }
	 ruleSTR_OP_GTE
{ after(grammarAccess.getSTR_OP_GTERule()); } 
	 EOF 
;

// Rule STR_OP_GTE
ruleSTR_OP_GTE
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getSTR_OP_GTEAccess().getGTEKeyword()); }

	'GTE' 

{ after(grammarAccess.getSTR_OP_GTEAccess().getGTEKeyword()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleSTR_OP_LTE
entryRuleSTR_OP_LTE 
:
{ before(grammarAccess.getSTR_OP_LTERule()); }
	 ruleSTR_OP_LTE
{ after(grammarAccess.getSTR_OP_LTERule()); } 
	 EOF 
;

// Rule STR_OP_LTE
ruleSTR_OP_LTE
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getSTR_OP_LTEAccess().getLTEKeyword()); }

	'LTE' 

{ after(grammarAccess.getSTR_OP_LTEAccess().getLTEKeyword()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleSTR_OP_NE
entryRuleSTR_OP_NE 
:
{ before(grammarAccess.getSTR_OP_NERule()); }
	 ruleSTR_OP_NE
{ after(grammarAccess.getSTR_OP_NERule()); } 
	 EOF 
;

// Rule STR_OP_NE
ruleSTR_OP_NE
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getSTR_OP_NEAccess().getNEQKeyword()); }

	'NEQ' 

{ after(grammarAccess.getSTR_OP_NEAccess().getNEQKeyword()); }
)

;
finally {
	restoreStackSize(stackSize);
}





// Entry rule entryRuleNUM_OP_EQ
entryRuleNUM_OP_EQ 
:
{ before(grammarAccess.getNUM_OP_EQRule()); }
	 ruleNUM_OP_EQ
{ after(grammarAccess.getNUM_OP_EQRule()); } 
	 EOF 
;

// Rule NUM_OP_EQ
ruleNUM_OP_EQ
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getNUM_OP_EQAccess().getEqualsSignEqualsSignKeyword()); }

	'==' 

{ after(grammarAccess.getNUM_OP_EQAccess().getEqualsSignEqualsSignKeyword()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleNUM_OP_LT
entryRuleNUM_OP_LT 
:
{ before(grammarAccess.getNUM_OP_LTRule()); }
	 ruleNUM_OP_LT
{ after(grammarAccess.getNUM_OP_LTRule()); } 
	 EOF 
;

// Rule NUM_OP_LT
ruleNUM_OP_LT
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getNUM_OP_LTAccess().getLessThanSignKeyword()); }

	'<' 

{ after(grammarAccess.getNUM_OP_LTAccess().getLessThanSignKeyword()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleNUM_OP_LTE
entryRuleNUM_OP_LTE 
:
{ before(grammarAccess.getNUM_OP_LTERule()); }
	 ruleNUM_OP_LTE
{ after(grammarAccess.getNUM_OP_LTERule()); } 
	 EOF 
;

// Rule NUM_OP_LTE
ruleNUM_OP_LTE
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getNUM_OP_LTEAccess().getLessThanSignEqualsSignKeyword()); }

	'<=' 

{ after(grammarAccess.getNUM_OP_LTEAccess().getLessThanSignEqualsSignKeyword()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleNUM_OP_GT
entryRuleNUM_OP_GT 
:
{ before(grammarAccess.getNUM_OP_GTRule()); }
	 ruleNUM_OP_GT
{ after(grammarAccess.getNUM_OP_GTRule()); } 
	 EOF 
;

// Rule NUM_OP_GT
ruleNUM_OP_GT
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getNUM_OP_GTAccess().getGreaterThanSignKeyword()); }

	'>' 

{ after(grammarAccess.getNUM_OP_GTAccess().getGreaterThanSignKeyword()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleNUM_OP_GTE
entryRuleNUM_OP_GTE 
:
{ before(grammarAccess.getNUM_OP_GTERule()); }
	 ruleNUM_OP_GTE
{ after(grammarAccess.getNUM_OP_GTERule()); } 
	 EOF 
;

// Rule NUM_OP_GTE
ruleNUM_OP_GTE
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getNUM_OP_GTEAccess().getGreaterThanSignEqualsSignKeyword()); }

	'>=' 

{ after(grammarAccess.getNUM_OP_GTEAccess().getGreaterThanSignEqualsSignKeyword()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleNUM_OP_NE
entryRuleNUM_OP_NE 
:
{ before(grammarAccess.getNUM_OP_NERule()); }
	 ruleNUM_OP_NE
{ after(grammarAccess.getNUM_OP_NERule()); } 
	 EOF 
;

// Rule NUM_OP_NE
ruleNUM_OP_NE
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getNUM_OP_NEAccess().getExclamationMarkEqualsSignKeyword()); }

	'!=' 

{ after(grammarAccess.getNUM_OP_NEAccess().getExclamationMarkEqualsSignKeyword()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleSEMI_COLON
entryRuleSEMI_COLON 
:
{ before(grammarAccess.getSEMI_COLONRule()); }
	 ruleSEMI_COLON
{ after(grammarAccess.getSEMI_COLONRule()); } 
	 EOF 
;

// Rule SEMI_COLON
ruleSEMI_COLON
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getSEMI_COLONAccess().getSemicolonKeyword()); }

	';' 

{ after(grammarAccess.getSEMI_COLONAccess().getSemicolonKeyword()); }
)

;
finally {
	restoreStackSize(stackSize);
}















// Entry rule entryRulePOUND
entryRulePOUND 
:
{ before(grammarAccess.getPOUNDRule()); }
	 rulePOUND
{ after(grammarAccess.getPOUNDRule()); } 
	 EOF 
;

// Rule POUND
rulePOUND
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getPOUNDAccess().getNumberSignKeyword()); }

	'#' 

{ after(grammarAccess.getPOUNDAccess().getNumberSignKeyword()); }
)

;
finally {
	restoreStackSize(stackSize);
}





// Entry rule entryRuleCOMMA
entryRuleCOMMA 
:
{ before(grammarAccess.getCOMMARule()); }
	 ruleCOMMA
{ after(grammarAccess.getCOMMARule()); } 
	 EOF 
;

// Rule COMMA
ruleCOMMA
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getCOMMAAccess().getCommaKeyword()); }

	',' 

{ after(grammarAccess.getCOMMAAccess().getCommaKeyword()); }
)

;
finally {
	restoreStackSize(stackSize);
}





// Entry rule entryRuleDIV
entryRuleDIV 
:
{ before(grammarAccess.getDIVRule()); }
	 ruleDIV
{ after(grammarAccess.getDIVRule()); } 
	 EOF 
;

// Rule DIV
ruleDIV
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getDIVAccess().getSolidusKeyword()); }

	'/' 

{ after(grammarAccess.getDIVAccess().getSolidusKeyword()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulePERCENT
entryRulePERCENT 
:
{ before(grammarAccess.getPERCENTRule()); }
	 rulePERCENT
{ after(grammarAccess.getPERCENTRule()); } 
	 EOF 
;

// Rule PERCENT
rulePERCENT
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getPERCENTAccess().getPercentSignKeyword()); }

	'%' 

{ after(grammarAccess.getPERCENTAccess().getPercentSignKeyword()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulePLUS
entryRulePLUS 
:
{ before(grammarAccess.getPLUSRule()); }
	 rulePLUS
{ after(grammarAccess.getPLUSRule()); } 
	 EOF 
;

// Rule PLUS
rulePLUS
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getPLUSAccess().getPlusSignKeyword()); }

	'+' 

{ after(grammarAccess.getPLUSAccess().getPlusSignKeyword()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleMINUS
entryRuleMINUS 
:
{ before(grammarAccess.getMINUSRule()); }
	 ruleMINUS
{ after(grammarAccess.getMINUSRule()); } 
	 EOF 
;

// Rule MINUS
ruleMINUS
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getMINUSAccess().getHyphenMinusKeyword()); }

	'-' 

{ after(grammarAccess.getMINUSAccess().getHyphenMinusKeyword()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleSTAR
entryRuleSTAR 
:
{ before(grammarAccess.getSTARRule()); }
	 ruleSTAR
{ after(grammarAccess.getSTARRule()); } 
	 EOF 
;

// Rule STAR
ruleSTAR
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getSTARAccess().getAsteriskKeyword()); }

	'*' 

{ after(grammarAccess.getSTARAccess().getAsteriskKeyword()); }
)

;
finally {
	restoreStackSize(stackSize);
}





// Entry rule entryRuleDOLLAR
entryRuleDOLLAR 
:
{ before(grammarAccess.getDOLLARRule()); }
	 ruleDOLLAR
{ after(grammarAccess.getDOLLARRule()); } 
	 EOF 
;

// Rule DOLLAR
ruleDOLLAR
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getDOLLARAccess().getDollarSignKeyword()); }

	'$' 

{ after(grammarAccess.getDOLLARAccess().getDollarSignKeyword()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulegroup_type
entryRulegroup_type 
:
{ before(grammarAccess.getGroup_typeRule()); }
	 rulegroup_type
{ after(grammarAccess.getGroup_typeRule()); } 
	 EOF 
;

// Rule group_type
rulegroup_type
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getGroup_typeAccess().getSTRINGTerminalRuleCall()); }
	RULE_STRING
{ after(grammarAccess.getGroup_typeAccess().getSTRINGTerminalRuleCall()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulegroup_item_list
entryRulegroup_item_list 
:
{ before(grammarAccess.getGroup_item_listRule()); }
	 rulegroup_item_list
{ after(grammarAccess.getGroup_item_listRule()); } 
	 EOF 
;

// Rule group_item_list
rulegroup_item_list
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getGroup_item_listAccess().getGroup()); }
(rule__Group_item_list__Group__0)
{ after(grammarAccess.getGroup_item_listAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleorder_by_clause
entryRuleorder_by_clause 
:
{ before(grammarAccess.getOrder_by_clauseRule()); }
	 ruleorder_by_clause
{ after(grammarAccess.getOrder_by_clauseRule()); } 
	 EOF 
;

// Rule order_by_clause
ruleorder_by_clause
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getOrder_by_clauseAccess().getAlternatives()); }
(rule__Order_by_clause__Alternatives)
{ after(grammarAccess.getOrder_by_clauseAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleorder_col_list
entryRuleorder_col_list 
:
{ before(grammarAccess.getOrder_col_listRule()); }
	 ruleorder_col_list
{ after(grammarAccess.getOrder_col_listRule()); } 
	 EOF 
;

// Rule order_col_list
ruleorder_col_list
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getOrder_col_listAccess().getGroup()); }
(rule__Order_col_list__Group__0)
{ after(grammarAccess.getOrder_col_listAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleorder_col
entryRuleorder_col 
:
{ before(grammarAccess.getOrder_colRule()); }
	 ruleorder_col
{ after(grammarAccess.getOrder_colRule()); } 
	 EOF 
;

// Rule order_col
ruleorder_col
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getOrder_colAccess().getAlternatives()); }
(rule__Order_col__Alternatives)
{ after(grammarAccess.getOrder_colAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulepartition_clause
entryRulepartition_clause 
:
{ before(grammarAccess.getPartition_clauseRule()); }
	 rulepartition_clause
{ after(grammarAccess.getPartition_clauseRule()); } 
	 EOF 
;

// Rule partition_clause
rulepartition_clause
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getPartition_clauseAccess().getGroup()); }
(rule__Partition_clause__Group__0)
{ after(grammarAccess.getPartition_clauseAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulerel_list
entryRulerel_list 
:
{ before(grammarAccess.getRel_listRule()); }
	 rulerel_list
{ after(grammarAccess.getRel_listRule()); } 
	 EOF 
;

// Rule rel_list
rulerel_list
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getRel_listAccess().getGroup()); }
(rule__Rel_list__Group__0)
{ after(grammarAccess.getRel_listAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulejoin_type
entryRulejoin_type 
:
{ before(grammarAccess.getJoin_typeRule()); }
	 rulejoin_type
{ after(grammarAccess.getJoin_typeRule()); } 
	 EOF 
;

// Rule join_type
rulejoin_type
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getJoin_typeAccess().getSTRINGTerminalRuleCall()); }
	RULE_STRING
{ after(grammarAccess.getJoin_typeAccess().getSTRINGTerminalRuleCall()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulejoin_sub_clause
entryRulejoin_sub_clause 
:
{ before(grammarAccess.getJoin_sub_clauseRule()); }
	 rulejoin_sub_clause
{ after(grammarAccess.getJoin_sub_clauseRule()); } 
	 EOF 
;

// Rule join_sub_clause
rulejoin_sub_clause
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getJoin_sub_clauseAccess().getGroup()); }
(rule__Join_sub_clause__Group__0)
{ after(grammarAccess.getJoin_sub_clauseAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulejoin_item
entryRulejoin_item 
:
{ before(grammarAccess.getJoin_itemRule()); }
	 rulejoin_item
{ after(grammarAccess.getJoin_itemRule()); } 
	 EOF 
;

// Rule join_item
rulejoin_item
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getJoin_itemAccess().getGroup()); }
(rule__Join_item__Group__0)
{ after(grammarAccess.getJoin_itemAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulegroup_item
entryRulegroup_item 
:
{ before(grammarAccess.getGroup_itemRule()); }
	 rulegroup_item
{ after(grammarAccess.getGroup_itemRule()); } 
	 EOF 
;

// Rule group_item
rulegroup_item
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getGroup_itemAccess().getGroup()); }
(rule__Group_item__Group__0)
{ after(grammarAccess.getGroup_itemAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulejoin_group_by_clause
entryRulejoin_group_by_clause 
:
{ before(grammarAccess.getJoin_group_by_clauseRule()); }
	 rulejoin_group_by_clause
{ after(grammarAccess.getJoin_group_by_clauseRule()); } 
	 EOF 
;

// Rule join_group_by_clause
rulejoin_group_by_clause
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getJoin_group_by_clauseAccess().getGroup()); }
(rule__Join_group_by_clause__Group__0)
{ after(grammarAccess.getJoin_group_by_clauseAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulejoin_group_by_expr_list
entryRulejoin_group_by_expr_list 
:
{ before(grammarAccess.getJoin_group_by_expr_listRule()); }
	 rulejoin_group_by_expr_list
{ after(grammarAccess.getJoin_group_by_expr_listRule()); } 
	 EOF 
;

// Rule join_group_by_expr_list
rulejoin_group_by_expr_list
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getJoin_group_by_expr_listAccess().getAlternatives()); }
(rule__Join_group_by_expr_list__Alternatives)
{ after(grammarAccess.getJoin_group_by_expr_listAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulejoin_group_by_expr
entryRulejoin_group_by_expr 
:
{ before(grammarAccess.getJoin_group_by_exprRule()); }
	 rulejoin_group_by_expr
{ after(grammarAccess.getJoin_group_by_exprRule()); } 
	 EOF 
;

// Rule join_group_by_expr
rulejoin_group_by_expr
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getJoin_group_by_exprAccess().getAlternatives()); }
(rule__Join_group_by_expr__Alternatives)
{ after(grammarAccess.getJoin_group_by_exprAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulenested_blk
entryRulenested_blk 
:
{ before(grammarAccess.getNested_blkRule()); }
	 rulenested_blk
{ after(grammarAccess.getNested_blkRule()); } 
	 EOF 
;

// Rule nested_blk
rulenested_blk
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getNested_blkAccess().getGroup()); }
(rule__Nested_blk__Group__0)
{ after(grammarAccess.getNested_blkAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulegenerate_clause
entryRulegenerate_clause 
:
{ before(grammarAccess.getGenerate_clauseRule()); }
	 rulegenerate_clause
{ after(grammarAccess.getGenerate_clauseRule()); } 
	 EOF 
;

// Rule generate_clause
rulegenerate_clause
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getGenerate_clauseAccess().getGroup()); }
(rule__Generate_clause__Group__0)
{ after(grammarAccess.getGenerate_clauseAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulenested_command_list
entryRulenested_command_list 
:
{ before(grammarAccess.getNested_command_listRule()); }
	 rulenested_command_list
{ after(grammarAccess.getNested_command_listRule()); } 
	 EOF 
;

// Rule nested_command_list
rulenested_command_list
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getNested_command_listAccess().getGroup()); }
(rule__Nested_command_list__Group__0)
{ after(grammarAccess.getNested_command_listAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulenested_command
entryRulenested_command 
:
{ before(grammarAccess.getNested_commandRule()); }
	 rulenested_command
{ after(grammarAccess.getNested_commandRule()); } 
	 EOF 
;

// Rule nested_command
rulenested_command
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getNested_commandAccess().getGroup()); }
(rule__Nested_command__Group__0)
{ after(grammarAccess.getNested_commandAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulenested_op
entryRulenested_op 
:
{ before(grammarAccess.getNested_opRule()); }
	 rulenested_op
{ after(grammarAccess.getNested_opRule()); } 
	 EOF 
;

// Rule nested_op
rulenested_op
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getNested_opAccess().getAlternatives()); }
(rule__Nested_op__Alternatives)
{ after(grammarAccess.getNested_opAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleNestedFilter
entryRuleNestedFilter 
:
{ before(grammarAccess.getNestedFilterRule()); }
	 ruleNestedFilter
{ after(grammarAccess.getNestedFilterRule()); } 
	 EOF 
;

// Rule NestedFilter
ruleNestedFilter
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getNestedFilterAccess().getGroup()); }
(rule__NestedFilter__Group__0)
{ after(grammarAccess.getNestedFilterAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulenested_sort
entryRulenested_sort 
:
{ before(grammarAccess.getNested_sortRule()); }
	 rulenested_sort
{ after(grammarAccess.getNested_sortRule()); } 
	 EOF 
;

// Rule nested_sort
rulenested_sort
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getNested_sortAccess().getGroup()); }
(rule__Nested_sort__Group__0)
{ after(grammarAccess.getNested_sortAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulenested_distinct
entryRulenested_distinct 
:
{ before(grammarAccess.getNested_distinctRule()); }
	 rulenested_distinct
{ after(grammarAccess.getNested_distinctRule()); } 
	 EOF 
;

// Rule nested_distinct
rulenested_distinct
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getNested_distinctAccess().getGroup()); }
(rule__Nested_distinct__Group__0)
{ after(grammarAccess.getNested_distinctAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulenested_limit
entryRulenested_limit 
:
{ before(grammarAccess.getNested_limitRule()); }
	 rulenested_limit
{ after(grammarAccess.getNested_limitRule()); } 
	 EOF 
;

// Rule nested_limit
rulenested_limit
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getNested_limitAccess().getGroup()); }
(rule__Nested_limit__Group__0)
{ after(grammarAccess.getNested_limitAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulesplit_branch
entryRulesplit_branch 
:
{ before(grammarAccess.getSplit_branchRule()); }
	 rulesplit_branch
{ after(grammarAccess.getSplit_branchRule()); } 
	 EOF 
;

// Rule split_branch
rulesplit_branch
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getSplit_branchAccess().getGroup()); }
(rule__Split_branch__Group__0)
{ after(grammarAccess.getSplit_branchAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulecol_ref
entryRulecol_ref 
:
{ before(grammarAccess.getCol_refRule()); }
	 rulecol_ref
{ after(grammarAccess.getCol_refRule()); } 
	 EOF 
;

// Rule col_ref
rulecol_ref
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getCol_refAccess().getAlternatives()); }
(rule__Col_ref__Alternatives)
{ after(grammarAccess.getCol_refAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulealias_col_ref
entryRulealias_col_ref 
:
{ before(grammarAccess.getAlias_col_refRule()); }
	 rulealias_col_ref
{ after(grammarAccess.getAlias_col_refRule()); } 
	 EOF 
;

// Rule alias_col_ref
rulealias_col_ref
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAlias_col_refAccess().getAlternatives()); }
(rule__Alias_col_ref__Alternatives)
{ after(grammarAccess.getAlias_col_refAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuledollar_col_ref
entryRuledollar_col_ref 
:
{ before(grammarAccess.getDollar_col_refRule()); }
	 ruledollar_col_ref
{ after(grammarAccess.getDollar_col_refRule()); } 
	 EOF 
;

// Rule dollar_col_ref
ruledollar_col_ref
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getDollar_col_refAccess().getGroup()); }
(rule__Dollar_col_ref__Group__0)
{ after(grammarAccess.getDollar_col_refAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleconst_expr
entryRuleconst_expr 
:
{ before(grammarAccess.getConst_exprRule()); }
	 ruleconst_expr
{ after(grammarAccess.getConst_exprRule()); } 
	 EOF 
;

// Rule const_expr
ruleconst_expr
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getConst_exprAccess().getLiteralParserRuleCall()); }
	ruleliteral
{ after(grammarAccess.getConst_exprAccess().getLiteralParserRuleCall()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleliteral
entryRuleliteral 
:
{ before(grammarAccess.getLiteralRule()); }
	 ruleliteral
{ after(grammarAccess.getLiteralRule()); } 
	 EOF 
;

// Rule literal
ruleliteral
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getLiteralAccess().getAlternatives()); }
(rule__Literal__Alternatives)
{ after(grammarAccess.getLiteralAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulescalar
entryRulescalar 
:
{ before(grammarAccess.getScalarRule()); }
	 rulescalar
{ after(grammarAccess.getScalarRule()); } 
	 EOF 
;

// Rule scalar
rulescalar
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getScalarAccess().getAlternatives()); }
(rule__Scalar__Alternatives)
{ after(grammarAccess.getScalarAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulescalarInt
entryRulescalarInt 
:
{ before(grammarAccess.getScalarIntRule()); }
	 rulescalarInt
{ after(grammarAccess.getScalarIntRule()); } 
	 EOF 
;

// Rule scalarInt
rulescalarInt
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getScalarIntAccess().getAlternatives()); }
(rule__ScalarInt__Alternatives)
{ after(grammarAccess.getScalarIntAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}




rule__Statement__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatementAccess().getGroup_0()); }
(rule__Statement__Group_0__0)
{ after(grammarAccess.getStatementAccess().getGroup_0()); }
)

    |(
{ before(grammarAccess.getStatementAccess().getCommentStatementParserRuleCall_1()); }
	ruleCommentStatement
{ after(grammarAccess.getStatementAccess().getCommentStatementParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Alternatives_0_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatementAccess().getDefineStatementParserRuleCall_0_0_0()); }
	ruleDefineStatement
{ after(grammarAccess.getStatementAccess().getDefineStatementParserRuleCall_0_0_0()); }
)

    |(
{ before(grammarAccess.getStatementAccess().getLoadStatementParserRuleCall_0_0_1()); }
	ruleLoadStatement
{ after(grammarAccess.getStatementAccess().getLoadStatementParserRuleCall_0_0_1()); }
)

    |(
{ before(grammarAccess.getStatementAccess().getGroup_0_0_2()); }
(rule__Statement__Group_0_0_2__0)
{ after(grammarAccess.getStatementAccess().getGroup_0_0_2()); }
)

    |(
{ before(grammarAccess.getStatementAccess().getMrStatementParserRuleCall_0_0_3()); }
	ruleMrStatement
{ after(grammarAccess.getStatementAccess().getMrStatementParserRuleCall_0_0_3()); }
)

    |(
{ before(grammarAccess.getStatementAccess().getSplitStatementParserRuleCall_0_0_4()); }
	ruleSplitStatement
{ after(grammarAccess.getStatementAccess().getSplitStatementParserRuleCall_0_0_4()); }
)

    |(
{ before(grammarAccess.getStatementAccess().getUnionStatementParserRuleCall_0_0_5()); }
	ruleUnionStatement
{ after(grammarAccess.getStatementAccess().getUnionStatementParserRuleCall_0_0_5()); }
)

    |(
{ before(grammarAccess.getStatementAccess().getSampleStatementParserRuleCall_0_0_6()); }
	ruleSampleStatement
{ after(grammarAccess.getStatementAccess().getSampleStatementParserRuleCall_0_0_6()); }
)

    |(
{ before(grammarAccess.getStatementAccess().getStoreStatementParserRuleCall_0_0_7()); }
	ruleStoreStatement
{ after(grammarAccess.getStatementAccess().getStoreStatementParserRuleCall_0_0_7()); }
)

    |(
{ before(grammarAccess.getStatementAccess().getDumpStatementParserRuleCall_0_0_8()); }
	ruleDumpStatement
{ after(grammarAccess.getStatementAccess().getDumpStatementParserRuleCall_0_0_8()); }
)

    |(
{ before(grammarAccess.getStatementAccess().getDescribeStatementParserRuleCall_0_0_9()); }
	ruleDescribeStatement
{ after(grammarAccess.getStatementAccess().getDescribeStatementParserRuleCall_0_0_9()); }
)

    |(
{ before(grammarAccess.getStatementAccess().getExplainStatementParserRuleCall_0_0_10()); }
	ruleExplainStatement
{ after(grammarAccess.getStatementAccess().getExplainStatementParserRuleCall_0_0_10()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Alternatives_0_0_2_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatementAccess().getForeachStatementParserRuleCall_0_0_2_0_0()); }
	ruleForeachStatement
{ after(grammarAccess.getStatementAccess().getForeachStatementParserRuleCall_0_0_2_0_0()); }
)

    |(
{ before(grammarAccess.getStatementAccess().getFilterStatementParserRuleCall_0_0_2_0_1()); }
	ruleFilterStatement
{ after(grammarAccess.getStatementAccess().getFilterStatementParserRuleCall_0_0_2_0_1()); }
)

    |(
{ before(grammarAccess.getStatementAccess().getGroupByStatementParserRuleCall_0_0_2_0_2()); }
	ruleGroupByStatement
{ after(grammarAccess.getStatementAccess().getGroupByStatementParserRuleCall_0_0_2_0_2()); }
)

    |(
{ before(grammarAccess.getStatementAccess().getOrderStatementParserRuleCall_0_0_2_0_3()); }
	ruleOrderStatement
{ after(grammarAccess.getStatementAccess().getOrderStatementParserRuleCall_0_0_2_0_3()); }
)

    |(
{ before(grammarAccess.getStatementAccess().getLimitStatementParserRuleCall_0_0_2_0_4()); }
	ruleLimitStatement
{ after(grammarAccess.getStatementAccess().getLimitStatementParserRuleCall_0_0_2_0_4()); }
)

    |(
{ before(grammarAccess.getStatementAccess().getDistinctStatementParserRuleCall_0_0_2_0_5()); }
	ruleDistinctStatement
{ after(grammarAccess.getStatementAccess().getDistinctStatementParserRuleCall_0_0_2_0_5()); }
)

    |(
{ before(grammarAccess.getStatementAccess().getCrossStatementParserRuleCall_0_0_2_0_6()); }
	ruleCrossStatement
{ after(grammarAccess.getStatementAccess().getCrossStatementParserRuleCall_0_0_2_0_6()); }
)

    |(
{ before(grammarAccess.getStatementAccess().getJoinStatementParserRuleCall_0_0_2_0_7()); }
	ruleJoinStatement
{ after(grammarAccess.getStatementAccess().getJoinStatementParserRuleCall_0_0_2_0_7()); }
)

    |(
{ before(grammarAccess.getStatementAccess().getCoGroupByStatementParserRuleCall_0_0_2_0_8()); }
	ruleCoGroupByStatement
{ after(grammarAccess.getStatementAccess().getCoGroupByStatementParserRuleCall_0_0_2_0_8()); }
)

    |(
{ before(grammarAccess.getStatementAccess().getStreamStatementParserRuleCall_0_0_2_0_9()); }
	ruleStreamStatement
{ after(grammarAccess.getStatementAccess().getStreamStatementParserRuleCall_0_0_2_0_9()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DefineStatement__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDefineStatementAccess().getRegisterClauseParserRuleCall_0()); }
	ruleRegisterClause
{ after(grammarAccess.getDefineStatementAccess().getRegisterClauseParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getDefineStatementAccess().getDefineClauseParserRuleCall_1()); }
	ruleDefineClause
{ after(grammarAccess.getDefineStatementAccess().getDefineClauseParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getDefineStatementAccess().getDefaultClauseParserRuleCall_2()); }
	ruleDefaultClause
{ after(grammarAccess.getDefineStatementAccess().getDefaultClauseParserRuleCall_2()); }
)

    |(
{ before(grammarAccess.getDefineStatementAccess().getDeclareClauseParserRuleCall_3()); }
	ruleDeclareClause
{ after(grammarAccess.getDefineStatementAccess().getDeclareClauseParserRuleCall_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ForeachStatement__Alternatives_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getForeachStatementAccess().getGroup_4_0()); }
(rule__ForeachStatement__Group_4_0__0)
{ after(grammarAccess.getForeachStatementAccess().getGroup_4_0()); }
)

    |(
{ before(grammarAccess.getForeachStatementAccess().getItemsAssignment_4_1()); }
(rule__ForeachStatement__ItemsAssignment_4_1)
{ after(grammarAccess.getForeachStatementAccess().getItemsAssignment_4_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__StreamStatement__Alternatives_5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStreamStatementAccess().getEXECCOMMANDTerminalRuleCall_5_0()); }
	RULE_EXECCOMMAND
{ after(grammarAccess.getStreamStatementAccess().getEXECCOMMANDTerminalRuleCall_5_0()); }
)

    |(
{ before(grammarAccess.getStreamStatementAccess().getIDENTIFIERParserRuleCall_5_1()); }
	ruleIDENTIFIER
{ after(grammarAccess.getStreamStatementAccess().getIDENTIFIERParserRuleCall_5_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryCondition__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnaryConditionAccess().getGroup_0()); }
(rule__UnaryCondition__Group_0__0)
{ after(grammarAccess.getUnaryConditionAccess().getGroup_0()); }
)

    |(
{ before(grammarAccess.getUnaryConditionAccess().getGroup_1()); }
(rule__UnaryCondition__Group_1__0)
{ after(grammarAccess.getUnaryConditionAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Real_arg__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReal_argAccess().getConditionParserRuleCall_0()); }
	ruleCondition
{ after(grammarAccess.getReal_argAccess().getConditionParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getReal_argAccess().getSTARParserRuleCall_1()); }
	ruleSTAR
{ after(grammarAccess.getReal_argAccess().getSTARParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AddExpression__Alternatives_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAddExpressionAccess().getPLUSParserRuleCall_1_0_0()); }
	rulePLUS
{ after(grammarAccess.getAddExpressionAccess().getPLUSParserRuleCall_1_0_0()); }
)

    |(
{ before(grammarAccess.getAddExpressionAccess().getMINUSParserRuleCall_1_0_1()); }
	ruleMINUS
{ after(grammarAccess.getAddExpressionAccess().getMINUSParserRuleCall_1_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Multi_expr__Alternatives_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMulti_exprAccess().getSTARParserRuleCall_1_0_0()); }
	ruleSTAR
{ after(grammarAccess.getMulti_exprAccess().getSTARParserRuleCall_1_0_0()); }
)

    |(
{ before(grammarAccess.getMulti_exprAccess().getDIVParserRuleCall_1_0_1()); }
	ruleDIV
{ after(grammarAccess.getMulti_exprAccess().getDIVParserRuleCall_1_0_1()); }
)

    |(
{ before(grammarAccess.getMulti_exprAccess().getPERCENTParserRuleCall_1_0_2()); }
	rulePERCENT
{ after(grammarAccess.getMulti_exprAccess().getPERCENTParserRuleCall_1_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Unary_expr__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnary_exprAccess().getExpr_evalParserRuleCall_0()); }
	ruleexpr_eval
{ after(grammarAccess.getUnary_exprAccess().getExpr_evalParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getUnary_exprAccess().getNeg_exprParserRuleCall_1()); }
	ruleneg_expr
{ after(grammarAccess.getUnary_exprAccess().getNeg_exprParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Expr_eval__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpr_evalAccess().getConst_exprParserRuleCall_0()); }
	ruleconst_expr
{ after(grammarAccess.getExpr_evalAccess().getConst_exprParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getExpr_evalAccess().getVar_exprParserRuleCall_1()); }
	rulevar_expr
{ after(grammarAccess.getExpr_evalAccess().getVar_exprParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Var_expr__Alternatives_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVar_exprAccess().getDot_projParserRuleCall_1_0()); }
	ruledot_proj
{ after(grammarAccess.getVar_exprAccess().getDot_projParserRuleCall_1_0()); }
)

    |(
{ before(grammarAccess.getVar_exprAccess().getPound_projParserRuleCall_1_1()); }
	rulepound_proj
{ after(grammarAccess.getVar_exprAccess().getPound_projParserRuleCall_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Projectable_expr__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProjectable_exprAccess().getFunc_evalParserRuleCall_0()); }
	rulefunc_eval
{ after(grammarAccess.getProjectable_exprAccess().getFunc_evalParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getProjectable_exprAccess().getCol_refParserRuleCall_1()); }
	rulecol_ref
{ after(grammarAccess.getProjectable_exprAccess().getCol_refParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Dot_proj__Alternatives_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDot_projAccess().getFullStopKeyword_0_0()); }

	'.' 

{ after(grammarAccess.getDot_projAccess().getFullStopKeyword_0_0()); }
)

    |(
{ before(grammarAccess.getDot_projAccess().getColonColonKeyword_0_1()); }

	'::' 

{ after(grammarAccess.getDot_projAccess().getColonColonKeyword_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Col_alias_or_index__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCol_alias_or_indexAccess().getCol_aliasParserRuleCall_0()); }
	rulecol_alias
{ after(grammarAccess.getCol_alias_or_indexAccess().getCol_aliasParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getCol_alias_or_indexAccess().getCol_indexParserRuleCall_1()); }
	rulecol_index
{ after(grammarAccess.getCol_alias_or_indexAccess().getCol_indexParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Col_index__Alternatives_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCol_indexAccess().getDIGITTerminalRuleCall_1_0()); }
	RULE_DIGIT
{ after(grammarAccess.getCol_indexAccess().getDIGITTerminalRuleCall_1_0()); }
)

    |(
{ before(grammarAccess.getCol_indexAccess().getINTTerminalRuleCall_1_1()); }
	RULE_INT
{ after(grammarAccess.getCol_indexAccess().getINTTerminalRuleCall_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Pound_proj__Alternatives_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPound_projAccess().getSTRINGTerminalRuleCall_1_0()); }
	RULE_STRING
{ after(grammarAccess.getPound_projAccess().getSTRINGTerminalRuleCall_1_0()); }
)

    |(
{ before(grammarAccess.getPound_projAccess().getNULLKeyword_1_1()); }

	'NULL' 

{ after(grammarAccess.getPound_projAccess().getNULLKeyword_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Rel_op__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRel_opAccess().getRel_op_eqParserRuleCall_0()); }
	rulerel_op_eq
{ after(grammarAccess.getRel_opAccess().getRel_op_eqParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getRel_opAccess().getRel_op_neParserRuleCall_1()); }
	rulerel_op_ne
{ after(grammarAccess.getRel_opAccess().getRel_op_neParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getRel_opAccess().getRel_op_gtParserRuleCall_2()); }
	rulerel_op_gt
{ after(grammarAccess.getRel_opAccess().getRel_op_gtParserRuleCall_2()); }
)

    |(
{ before(grammarAccess.getRel_opAccess().getRel_op_gteParserRuleCall_3()); }
	rulerel_op_gte
{ after(grammarAccess.getRel_opAccess().getRel_op_gteParserRuleCall_3()); }
)

    |(
{ before(grammarAccess.getRel_opAccess().getRel_op_ltParserRuleCall_4()); }
	rulerel_op_lt
{ after(grammarAccess.getRel_opAccess().getRel_op_ltParserRuleCall_4()); }
)

    |(
{ before(grammarAccess.getRel_opAccess().getRel_op_lteParserRuleCall_5()); }
	rulerel_op_lte
{ after(grammarAccess.getRel_opAccess().getRel_op_lteParserRuleCall_5()); }
)

    |(
{ before(grammarAccess.getRel_opAccess().getMATCHESKeyword_6()); }

	'MATCHES' 

{ after(grammarAccess.getRel_opAccess().getMATCHESKeyword_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Rel_op_eq__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRel_op_eqAccess().getSTR_OP_EQParserRuleCall_0()); }
	ruleSTR_OP_EQ
{ after(grammarAccess.getRel_op_eqAccess().getSTR_OP_EQParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getRel_op_eqAccess().getNUM_OP_EQParserRuleCall_1()); }
	ruleNUM_OP_EQ
{ after(grammarAccess.getRel_op_eqAccess().getNUM_OP_EQParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Rel_op_ne__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRel_op_neAccess().getSTR_OP_NEParserRuleCall_0()); }
	ruleSTR_OP_NE
{ after(grammarAccess.getRel_op_neAccess().getSTR_OP_NEParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getRel_op_neAccess().getNUM_OP_NEParserRuleCall_1()); }
	ruleNUM_OP_NE
{ after(grammarAccess.getRel_op_neAccess().getNUM_OP_NEParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Rel_op_gt__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRel_op_gtAccess().getSTR_OP_GTParserRuleCall_0()); }
	ruleSTR_OP_GT
{ after(grammarAccess.getRel_op_gtAccess().getSTR_OP_GTParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getRel_op_gtAccess().getNUM_OP_GTParserRuleCall_1()); }
	ruleNUM_OP_GT
{ after(grammarAccess.getRel_op_gtAccess().getNUM_OP_GTParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Rel_op_gte__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRel_op_gteAccess().getSTR_OP_GTEParserRuleCall_0()); }
	ruleSTR_OP_GTE
{ after(grammarAccess.getRel_op_gteAccess().getSTR_OP_GTEParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getRel_op_gteAccess().getNUM_OP_GTEParserRuleCall_1()); }
	ruleNUM_OP_GTE
{ after(grammarAccess.getRel_op_gteAccess().getNUM_OP_GTEParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Rel_op_lt__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRel_op_ltAccess().getSTR_OP_LTParserRuleCall_0()); }
	ruleSTR_OP_LT
{ after(grammarAccess.getRel_op_ltAccess().getSTR_OP_LTParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getRel_op_ltAccess().getNUM_OP_LTParserRuleCall_1()); }
	ruleNUM_OP_LT
{ after(grammarAccess.getRel_op_ltAccess().getNUM_OP_LTParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Rel_op_lte__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRel_op_lteAccess().getSTR_OP_LTEParserRuleCall_0()); }
	ruleSTR_OP_LTE
{ after(grammarAccess.getRel_op_lteAccess().getSTR_OP_LTEParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getRel_op_lteAccess().getNUM_OP_LTEParserRuleCall_1()); }
	ruleNUM_OP_LTE
{ after(grammarAccess.getRel_op_lteAccess().getNUM_OP_LTEParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FlattenGeneratedItem__Alternatives_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFlattenGeneratedItemAccess().getConditionParserRuleCall_0_0()); }
	ruleCondition
{ after(grammarAccess.getFlattenGeneratedItemAccess().getConditionParserRuleCall_0_0()); }
)

    |(
{ before(grammarAccess.getFlattenGeneratedItemAccess().getAsteriskKeyword_0_1()); }

	'*' 

{ after(grammarAccess.getFlattenGeneratedItemAccess().getAsteriskKeyword_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FlattenGeneratedItem__Alternatives_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFlattenGeneratedItemAccess().getFieldDefParserRuleCall_1_1_0()); }
	ruleFieldDef
{ after(grammarAccess.getFlattenGeneratedItemAccess().getFieldDefParserRuleCall_1_1_0()); }
)

    |(
{ before(grammarAccess.getFlattenGeneratedItemAccess().getFieldFefListParserRuleCall_1_1_1()); }
	ruleFieldFefList
{ after(grammarAccess.getFlattenGeneratedItemAccess().getFieldFefListParserRuleCall_1_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FuncName__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFuncNameAccess().getIDTerminalRuleCall_0()); }
	RULE_ID
{ after(grammarAccess.getFuncNameAccess().getIDTerminalRuleCall_0()); }
)

    |(
{ before(grammarAccess.getFuncNameAccess().getFullStopKeyword_1()); }

	'.' 

{ after(grammarAccess.getFuncNameAccess().getFullStopKeyword_1()); }
)

    |(
{ before(grammarAccess.getFuncNameAccess().getDollarSignKeyword_2()); }

	'$' 

{ after(grammarAccess.getFuncNameAccess().getDollarSignKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PathClause__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPathClauseAccess().getALLKeyword_0()); }

	'ALL' 

{ after(grammarAccess.getPathClauseAccess().getALLKeyword_0()); }
)

    |(
{ before(grammarAccess.getPathClauseAccess().getScalarParserRuleCall_1()); }
	rulescalar
{ after(grammarAccess.getPathClauseAccess().getScalarParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getPathClauseAccess().getIDTerminalRuleCall_2()); }
	RULE_ID
{ after(grammarAccess.getPathClauseAccess().getIDTerminalRuleCall_2()); }
)

    |(
{ before(grammarAccess.getPathClauseAccess().getFullStopKeyword_3()); }

	'.' 

{ after(grammarAccess.getPathClauseAccess().getFullStopKeyword_3()); }
)

    |(
{ before(grammarAccess.getPathClauseAccess().getDollarSignKeyword_4()); }

	'$' 

{ after(grammarAccess.getPathClauseAccess().getDollarSignKeyword_4()); }
)

    |(
{ before(grammarAccess.getPathClauseAccess().getSolidusKeyword_5()); }

	'/' 

{ after(grammarAccess.getPathClauseAccess().getSolidusKeyword_5()); }
)

    |(
{ before(grammarAccess.getPathClauseAccess().getReverseSolidusKeyword_6()); }

	'\\' 

{ after(grammarAccess.getPathClauseAccess().getReverseSolidusKeyword_6()); }
)

    |(
{ before(grammarAccess.getPathClauseAccess().getHyphenMinusKeyword_7()); }

	'-' 

{ after(grammarAccess.getPathClauseAccess().getHyphenMinusKeyword_7()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AsClause__Alternatives_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAsClauseAccess().getAliasDefParserRuleCall_1_0()); }
	ruleAliasDef
{ after(grammarAccess.getAsClauseAccess().getAliasDefParserRuleCall_1_0()); }
)

    |(
{ before(grammarAccess.getAsClauseAccess().getAliasDefListParserRuleCall_1_1()); }
	ruleAliasDefList
{ after(grammarAccess.getAsClauseAccess().getAliasDefListParserRuleCall_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Type__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeAccess().getSimpleTypeParserRuleCall_0()); }
	ruleSimpleType
{ after(grammarAccess.getTypeAccess().getSimpleTypeParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getTypeAccess().getTupleTypeParserRuleCall_1()); }
	ruleTupleType
{ after(grammarAccess.getTypeAccess().getTupleTypeParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getTypeAccess().getMapTypeParserRuleCall_2()); }
	ruleMapType
{ after(grammarAccess.getTypeAccess().getMapTypeParserRuleCall_2()); }
)

    |(
{ before(grammarAccess.getTypeAccess().getBag_typeParserRuleCall_3()); }
	rulebag_type
{ after(grammarAccess.getTypeAccess().getBag_typeParserRuleCall_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleType__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSimpleTypeAccess().getINTKeyword_0()); }

	'INT' 

{ after(grammarAccess.getSimpleTypeAccess().getINTKeyword_0()); }
)

    |(
{ before(grammarAccess.getSimpleTypeAccess().getLONGKeyword_1()); }

	'LONG' 

{ after(grammarAccess.getSimpleTypeAccess().getLONGKeyword_1()); }
)

    |(
{ before(grammarAccess.getSimpleTypeAccess().getFLOATKeyword_2()); }

	'FLOAT' 

{ after(grammarAccess.getSimpleTypeAccess().getFLOATKeyword_2()); }
)

    |(
{ before(grammarAccess.getSimpleTypeAccess().getDOUBLEKeyword_3()); }

	'DOUBLE' 

{ after(grammarAccess.getSimpleTypeAccess().getDOUBLEKeyword_3()); }
)

    |(
{ before(grammarAccess.getSimpleTypeAccess().getCHARARRAYKeyword_4()); }

	'CHARARRAY' 

{ after(grammarAccess.getSimpleTypeAccess().getCHARARRAYKeyword_4()); }
)

    |(
{ before(grammarAccess.getSimpleTypeAccess().getBYTEARRAYKeyword_5()); }

	'BYTEARRAY' 

{ after(grammarAccess.getSimpleTypeAccess().getBYTEARRAYKeyword_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Order_by_clause__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOrder_by_clauseAccess().getGroup_0()); }
(rule__Order_by_clause__Group_0__0)
{ after(grammarAccess.getOrder_by_clauseAccess().getGroup_0()); }
)

    |(
{ before(grammarAccess.getOrder_by_clauseAccess().getOrder_col_listParserRuleCall_1()); }
	ruleorder_col_list
{ after(grammarAccess.getOrder_by_clauseAccess().getOrder_col_listParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Order_by_clause__Alternatives_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOrder_by_clauseAccess().getASCKeyword_0_1_0()); }

	'ASC' 

{ after(grammarAccess.getOrder_by_clauseAccess().getASCKeyword_0_1_0()); }
)

    |(
{ before(grammarAccess.getOrder_by_clauseAccess().getDESCKeyword_0_1_1()); }

	'DESC' 

{ after(grammarAccess.getOrder_by_clauseAccess().getDESCKeyword_0_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Order_col__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOrder_colAccess().getGroup_0()); }
(rule__Order_col__Group_0__0)
{ after(grammarAccess.getOrder_colAccess().getGroup_0()); }
)

    |(
{ before(grammarAccess.getOrder_colAccess().getGroup_1()); }
(rule__Order_col__Group_1__0)
{ after(grammarAccess.getOrder_colAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Order_col__Alternatives_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOrder_colAccess().getASCKeyword_0_1_0()); }

	'ASC' 

{ after(grammarAccess.getOrder_colAccess().getASCKeyword_0_1_0()); }
)

    |(
{ before(grammarAccess.getOrder_colAccess().getDESCKeyword_0_1_1()); }

	'DESC' 

{ after(grammarAccess.getOrder_colAccess().getDESCKeyword_0_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Order_col__Alternatives_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOrder_colAccess().getASCKeyword_1_2_0()); }

	'ASC' 

{ after(grammarAccess.getOrder_colAccess().getASCKeyword_1_2_0()); }
)

    |(
{ before(grammarAccess.getOrder_colAccess().getDESCKeyword_1_2_1()); }

	'DESC' 

{ after(grammarAccess.getOrder_colAccess().getDESCKeyword_1_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Join_sub_clause__Alternatives_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJoin_sub_clauseAccess().getLEFTKeyword_1_0()); }

	'LEFT' 

{ after(grammarAccess.getJoin_sub_clauseAccess().getLEFTKeyword_1_0()); }
)

    |(
{ before(grammarAccess.getJoin_sub_clauseAccess().getRIGHTKeyword_1_1()); }

	'RIGHT' 

{ after(grammarAccess.getJoin_sub_clauseAccess().getRIGHTKeyword_1_1()); }
)

    |(
{ before(grammarAccess.getJoin_sub_clauseAccess().getFULLKeyword_1_2()); }

	'FULL' 

{ after(grammarAccess.getJoin_sub_clauseAccess().getFULLKeyword_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Group_item__Alternatives_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGroup_itemAccess().getGroup_0_0()); }
(rule__Group_item__Group_0_0__0)
{ after(grammarAccess.getGroup_itemAccess().getGroup_0_0()); }
)

    |(
{ before(grammarAccess.getGroup_itemAccess().getALLKeyword_0_1()); }

	'ALL' 

{ after(grammarAccess.getGroup_itemAccess().getALLKeyword_0_1()); }
)

    |(
{ before(grammarAccess.getGroup_itemAccess().getANYKeyword_0_2()); }

	'ANY' 

{ after(grammarAccess.getGroup_itemAccess().getANYKeyword_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Group_item__Alternatives_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGroup_itemAccess().getINNERKeyword_1_0()); }

	'INNER' 

{ after(grammarAccess.getGroup_itemAccess().getINNERKeyword_1_0()); }
)

    |(
{ before(grammarAccess.getGroup_itemAccess().getOUTERKeyword_1_1()); }

	'OUTER' 

{ after(grammarAccess.getGroup_itemAccess().getOUTERKeyword_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Join_group_by_expr_list__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJoin_group_by_expr_listAccess().getJoin_group_by_exprParserRuleCall_0()); }
	rulejoin_group_by_expr
{ after(grammarAccess.getJoin_group_by_expr_listAccess().getJoin_group_by_exprParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getJoin_group_by_expr_listAccess().getGroup_1()); }
(rule__Join_group_by_expr_list__Group_1__0)
{ after(grammarAccess.getJoin_group_by_expr_listAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Join_group_by_expr__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJoin_group_by_exprAccess().getExpressionParserRuleCall_0()); }
	ruleExpression
{ after(grammarAccess.getJoin_group_by_exprAccess().getExpressionParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getJoin_group_by_exprAccess().getSTARParserRuleCall_1()); }
	ruleSTAR
{ after(grammarAccess.getJoin_group_by_exprAccess().getSTARParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Nested_op__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNested_opAccess().getNestedFilterParserRuleCall_0()); }
	ruleNestedFilter
{ after(grammarAccess.getNested_opAccess().getNestedFilterParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getNested_opAccess().getNested_sortParserRuleCall_1()); }
	rulenested_sort
{ after(grammarAccess.getNested_opAccess().getNested_sortParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getNested_opAccess().getNested_distinctParserRuleCall_2()); }
	rulenested_distinct
{ after(grammarAccess.getNested_opAccess().getNested_distinctParserRuleCall_2()); }
)

    |(
{ before(grammarAccess.getNested_opAccess().getNested_limitParserRuleCall_3()); }
	rulenested_limit
{ after(grammarAccess.getNested_opAccess().getNested_limitParserRuleCall_3()); }
)

    |(
{ before(grammarAccess.getNested_opAccess().getGroup_4()); }
(rule__Nested_op__Group_4__0)
{ after(grammarAccess.getNested_opAccess().getGroup_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Nested_limit__Alternatives_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNested_limitAccess().getINTTerminalRuleCall_2_0()); }
	RULE_INT
{ after(grammarAccess.getNested_limitAccess().getINTTerminalRuleCall_2_0()); }
)

    |(
{ before(grammarAccess.getNested_limitAccess().getLONGINTEGERTerminalRuleCall_2_1()); }
	RULE_LONGINTEGER
{ after(grammarAccess.getNested_limitAccess().getLONGINTEGERTerminalRuleCall_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Col_ref__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCol_refAccess().getAlias_col_refParserRuleCall_0()); }
	rulealias_col_ref
{ after(grammarAccess.getCol_refAccess().getAlias_col_refParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getCol_refAccess().getDollar_col_refParserRuleCall_1()); }
	ruledollar_col_ref
{ after(grammarAccess.getCol_refAccess().getDollar_col_refParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Alias_col_ref__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAlias_col_refAccess().getGROUPKeyword_0()); }

	'GROUP' 

{ after(grammarAccess.getAlias_col_refAccess().getGROUPKeyword_0()); }
)

    |(
{ before(grammarAccess.getAlias_col_refAccess().getIDENTIFIERParserRuleCall_1()); }
	ruleIDENTIFIER
{ after(grammarAccess.getAlias_col_refAccess().getIDENTIFIERParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Literal__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLiteralAccess().getScalarParserRuleCall_0()); }
	rulescalar
{ after(grammarAccess.getLiteralAccess().getScalarParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getLiteralAccess().getSTRINGTerminalRuleCall_1()); }
	RULE_STRING
{ after(grammarAccess.getLiteralAccess().getSTRINGTerminalRuleCall_1()); }
)

    |(
{ before(grammarAccess.getLiteralAccess().getUKeyword_2()); }

	'\\u' 

{ after(grammarAccess.getLiteralAccess().getUKeyword_2()); }
)

    |(
{ before(grammarAccess.getLiteralAccess().getNULLKeyword_3()); }

	'NULL' 

{ after(grammarAccess.getLiteralAccess().getNULLKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Scalar__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getScalarAccess().getFLOATINGPOINTTerminalRuleCall_0()); }
	RULE_FLOATINGPOINT
{ after(grammarAccess.getScalarAccess().getFLOATINGPOINTTerminalRuleCall_0()); }
)

    |(
{ before(grammarAccess.getScalarAccess().getScalarIntParserRuleCall_1()); }
	rulescalarInt
{ after(grammarAccess.getScalarAccess().getScalarIntParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ScalarInt__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getScalarIntAccess().getDIGITTerminalRuleCall_0()); }
	RULE_DIGIT
{ after(grammarAccess.getScalarIntAccess().getDIGITTerminalRuleCall_0()); }
)

    |(
{ before(grammarAccess.getScalarIntAccess().getINTTerminalRuleCall_1()); }
	RULE_INT
{ after(grammarAccess.getScalarIntAccess().getINTTerminalRuleCall_1()); }
)

    |(
{ before(grammarAccess.getScalarIntAccess().getLONGINTEGERTerminalRuleCall_2()); }
	RULE_LONGINTEGER
{ after(grammarAccess.getScalarIntAccess().getLONGINTEGERTerminalRuleCall_2()); }
)

    |(
{ before(grammarAccess.getScalarIntAccess().getGroup_3()); }
(rule__ScalarInt__Group_3__0)
{ after(grammarAccess.getScalarIntAccess().getGroup_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}



rule__Statement__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Statement__Group_0__0__Impl
	rule__Statement__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatementAccess().getAlternatives_0_0()); }
(rule__Statement__Alternatives_0_0)
{ after(grammarAccess.getStatementAccess().getAlternatives_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Statement__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Statement__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatementAccess().getSemicolonKeyword_0_1()); }

	';' 

{ after(grammarAccess.getStatementAccess().getSemicolonKeyword_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Statement__Group_0_0_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Statement__Group_0_0_2__0__Impl
	rule__Statement__Group_0_0_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Group_0_0_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatementAccess().getAlternatives_0_0_2_0()); }
(rule__Statement__Alternatives_0_0_2_0)
{ after(grammarAccess.getStatementAccess().getAlternatives_0_0_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Statement__Group_0_0_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Statement__Group_0_0_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Group_0_0_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatementAccess().getParallelClauseParserRuleCall_0_0_2_1()); }
(	ruleParallelClause)?
{ after(grammarAccess.getStatementAccess().getParallelClauseParserRuleCall_0_0_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__LoadStatement__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LoadStatement__Group__0__Impl
	rule__LoadStatement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LoadStatement__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLoadStatementAccess().getNameAssignment_0()); }
(rule__LoadStatement__NameAssignment_0)
{ after(grammarAccess.getLoadStatementAccess().getNameAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LoadStatement__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LoadStatement__Group__1__Impl
	rule__LoadStatement__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__LoadStatement__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLoadStatementAccess().getEqualsSignKeyword_1()); }

	'=' 

{ after(grammarAccess.getLoadStatementAccess().getEqualsSignKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LoadStatement__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LoadStatement__Group__2__Impl
	rule__LoadStatement__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__LoadStatement__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLoadStatementAccess().getLOADKeyword_2()); }

	'LOAD' 

{ after(grammarAccess.getLoadStatementAccess().getLOADKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LoadStatement__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LoadStatement__Group__3__Impl
	rule__LoadStatement__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__LoadStatement__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLoadStatementAccess().getSTRINGTerminalRuleCall_3()); }
	RULE_STRING
{ after(grammarAccess.getLoadStatementAccess().getSTRINGTerminalRuleCall_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LoadStatement__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LoadStatement__Group__4__Impl
	rule__LoadStatement__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__LoadStatement__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLoadStatementAccess().getLoadUsingParserRuleCall_4()); }
(	ruleLoadUsing)?
{ after(grammarAccess.getLoadStatementAccess().getLoadUsingParserRuleCall_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LoadStatement__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LoadStatement__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LoadStatement__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLoadStatementAccess().getAsClauseParserRuleCall_5()); }
(	ruleAsClause)?
{ after(grammarAccess.getLoadStatementAccess().getAsClauseParserRuleCall_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__ForeachStatement__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ForeachStatement__Group__0__Impl
	rule__ForeachStatement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ForeachStatement__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getForeachStatementAccess().getNameAssignment_0()); }
(rule__ForeachStatement__NameAssignment_0)
{ after(grammarAccess.getForeachStatementAccess().getNameAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ForeachStatement__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ForeachStatement__Group__1__Impl
	rule__ForeachStatement__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ForeachStatement__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getForeachStatementAccess().getEqualsSignKeyword_1()); }

	'=' 

{ after(grammarAccess.getForeachStatementAccess().getEqualsSignKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ForeachStatement__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ForeachStatement__Group__2__Impl
	rule__ForeachStatement__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ForeachStatement__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getForeachStatementAccess().getFOREACHKeyword_2()); }

	'FOREACH' 

{ after(grammarAccess.getForeachStatementAccess().getFOREACHKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ForeachStatement__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ForeachStatement__Group__3__Impl
	rule__ForeachStatement__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ForeachStatement__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getForeachStatementAccess().getTypeAssignment_3()); }
(rule__ForeachStatement__TypeAssignment_3)
{ after(grammarAccess.getForeachStatementAccess().getTypeAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ForeachStatement__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ForeachStatement__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ForeachStatement__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getForeachStatementAccess().getAlternatives_4()); }
(rule__ForeachStatement__Alternatives_4)
{ after(grammarAccess.getForeachStatementAccess().getAlternatives_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__ForeachStatement__Group_4_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ForeachStatement__Group_4_0__0__Impl
	rule__ForeachStatement__Group_4_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ForeachStatement__Group_4_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getForeachStatementAccess().getItemsAssignment_4_0_0()); }
(rule__ForeachStatement__ItemsAssignment_4_0_0)
{ after(grammarAccess.getForeachStatementAccess().getItemsAssignment_4_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ForeachStatement__Group_4_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ForeachStatement__Group_4_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ForeachStatement__Group_4_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getForeachStatementAccess().getSemicolonKeyword_4_0_1()); }
(
	';' 
)?
{ after(grammarAccess.getForeachStatementAccess().getSemicolonKeyword_4_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__FilterStatement__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FilterStatement__Group__0__Impl
	rule__FilterStatement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FilterStatement__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFilterStatementAccess().getNameAssignment_0()); }
(rule__FilterStatement__NameAssignment_0)
{ after(grammarAccess.getFilterStatementAccess().getNameAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FilterStatement__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FilterStatement__Group__1__Impl
	rule__FilterStatement__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__FilterStatement__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFilterStatementAccess().getEqualsSignKeyword_1()); }

	'=' 

{ after(grammarAccess.getFilterStatementAccess().getEqualsSignKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FilterStatement__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FilterStatement__Group__2__Impl
	rule__FilterStatement__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__FilterStatement__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFilterStatementAccess().getFILTERKeyword_2()); }

	'FILTER' 

{ after(grammarAccess.getFilterStatementAccess().getFILTERKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FilterStatement__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FilterStatement__Group__3__Impl
	rule__FilterStatement__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__FilterStatement__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFilterStatementAccess().getTypeAssignment_3()); }
(rule__FilterStatement__TypeAssignment_3)
{ after(grammarAccess.getFilterStatementAccess().getTypeAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FilterStatement__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FilterStatement__Group__4__Impl
	rule__FilterStatement__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__FilterStatement__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFilterStatementAccess().getBYKeyword_4()); }

	'BY' 

{ after(grammarAccess.getFilterStatementAccess().getBYKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FilterStatement__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FilterStatement__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FilterStatement__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFilterStatementAccess().getCondAssignment_5()); }
(rule__FilterStatement__CondAssignment_5)
{ after(grammarAccess.getFilterStatementAccess().getCondAssignment_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__GroupByStatement__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__GroupByStatement__Group__0__Impl
	rule__GroupByStatement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__GroupByStatement__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGroupByStatementAccess().getNameAssignment_0()); }
(rule__GroupByStatement__NameAssignment_0)
{ after(grammarAccess.getGroupByStatementAccess().getNameAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__GroupByStatement__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__GroupByStatement__Group__1__Impl
	rule__GroupByStatement__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__GroupByStatement__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGroupByStatementAccess().getEqualsSignKeyword_1()); }

	'=' 

{ after(grammarAccess.getGroupByStatementAccess().getEqualsSignKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__GroupByStatement__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__GroupByStatement__Group__2__Impl
	rule__GroupByStatement__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__GroupByStatement__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGroupByStatementAccess().getGROUPKeyword_2()); }

	'GROUP' 

{ after(grammarAccess.getGroupByStatementAccess().getGROUPKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__GroupByStatement__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__GroupByStatement__Group__3__Impl
	rule__GroupByStatement__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__GroupByStatement__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGroupByStatementAccess().getTypeAssignment_3()); }
(rule__GroupByStatement__TypeAssignment_3)
{ after(grammarAccess.getGroupByStatementAccess().getTypeAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__GroupByStatement__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__GroupByStatement__Group__4__Impl
	rule__GroupByStatement__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__GroupByStatement__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGroupByStatementAccess().getItemsAssignment_4()); }
(rule__GroupByStatement__ItemsAssignment_4)
{ after(grammarAccess.getGroupByStatementAccess().getItemsAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__GroupByStatement__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__GroupByStatement__Group__5__Impl
	rule__GroupByStatement__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__GroupByStatement__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGroupByStatementAccess().getGroup_5()); }
(rule__GroupByStatement__Group_5__0)?
{ after(grammarAccess.getGroupByStatementAccess().getGroup_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__GroupByStatement__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__GroupByStatement__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__GroupByStatement__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGroupByStatementAccess().getPartition_clauseParserRuleCall_6()); }
(	rulepartition_clause)?
{ after(grammarAccess.getGroupByStatementAccess().getPartition_clauseParserRuleCall_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}
















rule__GroupByStatement__Group_5__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__GroupByStatement__Group_5__0__Impl
	rule__GroupByStatement__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__GroupByStatement__Group_5__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGroupByStatementAccess().getUSINGKeyword_5_0()); }

	'USING' 

{ after(grammarAccess.getGroupByStatementAccess().getUSINGKeyword_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__GroupByStatement__Group_5__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__GroupByStatement__Group_5__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__GroupByStatement__Group_5__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGroupByStatementAccess().getGroup_typeParserRuleCall_5_1()); }
	rulegroup_type
{ after(grammarAccess.getGroupByStatementAccess().getGroup_typeParserRuleCall_5_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__CoGroupByStatement__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CoGroupByStatement__Group__0__Impl
	rule__CoGroupByStatement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CoGroupByStatement__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCoGroupByStatementAccess().getNameAssignment_0()); }
(rule__CoGroupByStatement__NameAssignment_0)
{ after(grammarAccess.getCoGroupByStatementAccess().getNameAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CoGroupByStatement__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CoGroupByStatement__Group__1__Impl
	rule__CoGroupByStatement__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__CoGroupByStatement__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCoGroupByStatementAccess().getEqualsSignKeyword_1()); }

	'=' 

{ after(grammarAccess.getCoGroupByStatementAccess().getEqualsSignKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CoGroupByStatement__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CoGroupByStatement__Group__2__Impl
	rule__CoGroupByStatement__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__CoGroupByStatement__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCoGroupByStatementAccess().getCOGROUPKeyword_2()); }

	'COGROUP' 

{ after(grammarAccess.getCoGroupByStatementAccess().getCOGROUPKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CoGroupByStatement__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CoGroupByStatement__Group__3__Impl
	rule__CoGroupByStatement__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__CoGroupByStatement__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCoGroupByStatementAccess().getAliasesAssignment_3()); }
(rule__CoGroupByStatement__AliasesAssignment_3)
{ after(grammarAccess.getCoGroupByStatementAccess().getAliasesAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CoGroupByStatement__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CoGroupByStatement__Group__4__Impl
	rule__CoGroupByStatement__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__CoGroupByStatement__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCoGroupByStatementAccess().getGroup_4()); }
(rule__CoGroupByStatement__Group_4__0)?
{ after(grammarAccess.getCoGroupByStatementAccess().getGroup_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CoGroupByStatement__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CoGroupByStatement__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CoGroupByStatement__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCoGroupByStatementAccess().getPartition_clauseParserRuleCall_5()); }
(	rulepartition_clause)?
{ after(grammarAccess.getCoGroupByStatementAccess().getPartition_clauseParserRuleCall_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__CoGroupByStatement__Group_4__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CoGroupByStatement__Group_4__0__Impl
	rule__CoGroupByStatement__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CoGroupByStatement__Group_4__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCoGroupByStatementAccess().getUSINGKeyword_4_0()); }

	'USING' 

{ after(grammarAccess.getCoGroupByStatementAccess().getUSINGKeyword_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CoGroupByStatement__Group_4__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CoGroupByStatement__Group_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CoGroupByStatement__Group_4__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCoGroupByStatementAccess().getCOGROUP_TYPETerminalRuleCall_4_1()); }
	RULE_COGROUP_TYPE
{ after(grammarAccess.getCoGroupByStatementAccess().getCOGROUP_TYPETerminalRuleCall_4_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__OrderStatement__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OrderStatement__Group__0__Impl
	rule__OrderStatement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__OrderStatement__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOrderStatementAccess().getNameAssignment_0()); }
(rule__OrderStatement__NameAssignment_0)
{ after(grammarAccess.getOrderStatementAccess().getNameAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__OrderStatement__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OrderStatement__Group__1__Impl
	rule__OrderStatement__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__OrderStatement__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOrderStatementAccess().getEqualsSignKeyword_1()); }

	'=' 

{ after(grammarAccess.getOrderStatementAccess().getEqualsSignKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__OrderStatement__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OrderStatement__Group__2__Impl
	rule__OrderStatement__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__OrderStatement__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOrderStatementAccess().getORDERKeyword_2()); }

	'ORDER' 

{ after(grammarAccess.getOrderStatementAccess().getORDERKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__OrderStatement__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OrderStatement__Group__3__Impl
	rule__OrderStatement__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__OrderStatement__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOrderStatementAccess().getTypeAssignment_3()); }
(rule__OrderStatement__TypeAssignment_3)
{ after(grammarAccess.getOrderStatementAccess().getTypeAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__OrderStatement__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OrderStatement__Group__4__Impl
	rule__OrderStatement__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__OrderStatement__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOrderStatementAccess().getBYKeyword_4()); }

	'BY' 

{ after(grammarAccess.getOrderStatementAccess().getBYKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__OrderStatement__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OrderStatement__Group__5__Impl
	rule__OrderStatement__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__OrderStatement__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOrderStatementAccess().getOrder_by_clauseParserRuleCall_5()); }
	ruleorder_by_clause
{ after(grammarAccess.getOrderStatementAccess().getOrder_by_clauseParserRuleCall_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__OrderStatement__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OrderStatement__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__OrderStatement__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOrderStatementAccess().getGroup_6()); }
(rule__OrderStatement__Group_6__0)?
{ after(grammarAccess.getOrderStatementAccess().getGroup_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}
















rule__OrderStatement__Group_6__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OrderStatement__Group_6__0__Impl
	rule__OrderStatement__Group_6__1
;
finally {
	restoreStackSize(stackSize);
}

rule__OrderStatement__Group_6__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOrderStatementAccess().getUSINGKeyword_6_0()); }

	'USING' 

{ after(grammarAccess.getOrderStatementAccess().getUSINGKeyword_6_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__OrderStatement__Group_6__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OrderStatement__Group_6__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__OrderStatement__Group_6__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOrderStatementAccess().getFuncClauseParserRuleCall_6_1()); }
	ruleFuncClause
{ after(grammarAccess.getOrderStatementAccess().getFuncClauseParserRuleCall_6_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__CrossStatement__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CrossStatement__Group__0__Impl
	rule__CrossStatement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CrossStatement__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCrossStatementAccess().getNameAssignment_0()); }
(rule__CrossStatement__NameAssignment_0)
{ after(grammarAccess.getCrossStatementAccess().getNameAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CrossStatement__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CrossStatement__Group__1__Impl
	rule__CrossStatement__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__CrossStatement__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCrossStatementAccess().getEqualsSignKeyword_1()); }

	'=' 

{ after(grammarAccess.getCrossStatementAccess().getEqualsSignKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CrossStatement__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CrossStatement__Group__2__Impl
	rule__CrossStatement__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__CrossStatement__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCrossStatementAccess().getCROSSKeyword_2()); }

	'CROSS' 

{ after(grammarAccess.getCrossStatementAccess().getCROSSKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CrossStatement__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CrossStatement__Group__3__Impl
	rule__CrossStatement__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__CrossStatement__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCrossStatementAccess().getAliasesAssignment_3()); }
(rule__CrossStatement__AliasesAssignment_3)
{ after(grammarAccess.getCrossStatementAccess().getAliasesAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CrossStatement__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CrossStatement__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CrossStatement__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCrossStatementAccess().getPartition_clauseParserRuleCall_4()); }
(	rulepartition_clause)?
{ after(grammarAccess.getCrossStatementAccess().getPartition_clauseParserRuleCall_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__UnionStatement__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UnionStatement__Group__0__Impl
	rule__UnionStatement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__UnionStatement__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnionStatementAccess().getNameAssignment_0()); }
(rule__UnionStatement__NameAssignment_0)
{ after(grammarAccess.getUnionStatementAccess().getNameAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__UnionStatement__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UnionStatement__Group__1__Impl
	rule__UnionStatement__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__UnionStatement__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnionStatementAccess().getEqualsSignKeyword_1()); }

	'=' 

{ after(grammarAccess.getUnionStatementAccess().getEqualsSignKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__UnionStatement__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UnionStatement__Group__2__Impl
	rule__UnionStatement__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__UnionStatement__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnionStatementAccess().getUNIONKeyword_2()); }

	'UNION' 

{ after(grammarAccess.getUnionStatementAccess().getUNIONKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__UnionStatement__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UnionStatement__Group__3__Impl
	rule__UnionStatement__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__UnionStatement__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnionStatementAccess().getONKeyword_3()); }

	'ON' 

{ after(grammarAccess.getUnionStatementAccess().getONKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__UnionStatement__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UnionStatement__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__UnionStatement__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnionStatementAccess().getAliasesAssignment_4()); }
(rule__UnionStatement__AliasesAssignment_4)
{ after(grammarAccess.getUnionStatementAccess().getAliasesAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__JoinStatement__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__JoinStatement__Group__0__Impl
	rule__JoinStatement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__JoinStatement__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJoinStatementAccess().getNameAssignment_0()); }
(rule__JoinStatement__NameAssignment_0)
{ after(grammarAccess.getJoinStatementAccess().getNameAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__JoinStatement__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__JoinStatement__Group__1__Impl
	rule__JoinStatement__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__JoinStatement__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJoinStatementAccess().getEqualsSignKeyword_1()); }

	'=' 

{ after(grammarAccess.getJoinStatementAccess().getEqualsSignKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__JoinStatement__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__JoinStatement__Group__2__Impl
	rule__JoinStatement__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__JoinStatement__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJoinStatementAccess().getJOINKeyword_2()); }

	'JOIN' 

{ after(grammarAccess.getJoinStatementAccess().getJOINKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__JoinStatement__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__JoinStatement__Group__3__Impl
	rule__JoinStatement__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__JoinStatement__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJoinStatementAccess().getAliasesAssignment_3()); }
(rule__JoinStatement__AliasesAssignment_3)
{ after(grammarAccess.getJoinStatementAccess().getAliasesAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__JoinStatement__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__JoinStatement__Group__4__Impl
	rule__JoinStatement__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__JoinStatement__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJoinStatementAccess().getGroup_4()); }
(rule__JoinStatement__Group_4__0)?
{ after(grammarAccess.getJoinStatementAccess().getGroup_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__JoinStatement__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__JoinStatement__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__JoinStatement__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJoinStatementAccess().getPartition_clauseParserRuleCall_5()); }
(	rulepartition_clause)?
{ after(grammarAccess.getJoinStatementAccess().getPartition_clauseParserRuleCall_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__JoinStatement__Group_4__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__JoinStatement__Group_4__0__Impl
	rule__JoinStatement__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__JoinStatement__Group_4__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJoinStatementAccess().getUSINGKeyword_4_0()); }

	'USING' 

{ after(grammarAccess.getJoinStatementAccess().getUSINGKeyword_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__JoinStatement__Group_4__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__JoinStatement__Group_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__JoinStatement__Group_4__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJoinStatementAccess().getJoin_typeParserRuleCall_4_1()); }
	rulejoin_type
{ after(grammarAccess.getJoinStatementAccess().getJoin_typeParserRuleCall_4_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__LimitStatement__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LimitStatement__Group__0__Impl
	rule__LimitStatement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LimitStatement__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLimitStatementAccess().getNameAssignment_0()); }
(rule__LimitStatement__NameAssignment_0)
{ after(grammarAccess.getLimitStatementAccess().getNameAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LimitStatement__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LimitStatement__Group__1__Impl
	rule__LimitStatement__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__LimitStatement__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLimitStatementAccess().getEqualsSignKeyword_1()); }

	'=' 

{ after(grammarAccess.getLimitStatementAccess().getEqualsSignKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LimitStatement__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LimitStatement__Group__2__Impl
	rule__LimitStatement__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__LimitStatement__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLimitStatementAccess().getLIMITKeyword_2()); }

	'LIMIT' 

{ after(grammarAccess.getLimitStatementAccess().getLIMITKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LimitStatement__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LimitStatement__Group__3__Impl
	rule__LimitStatement__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__LimitStatement__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLimitStatementAccess().getTypeAssignment_3()); }
(rule__LimitStatement__TypeAssignment_3)
{ after(grammarAccess.getLimitStatementAccess().getTypeAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LimitStatement__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LimitStatement__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LimitStatement__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLimitStatementAccess().getScalarIntParserRuleCall_4()); }
	rulescalarInt
{ after(grammarAccess.getLimitStatementAccess().getScalarIntParserRuleCall_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__SampleStatement__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SampleStatement__Group__0__Impl
	rule__SampleStatement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SampleStatement__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSampleStatementAccess().getNameAssignment_0()); }
(rule__SampleStatement__NameAssignment_0)
{ after(grammarAccess.getSampleStatementAccess().getNameAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SampleStatement__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SampleStatement__Group__1__Impl
	rule__SampleStatement__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__SampleStatement__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSampleStatementAccess().getEqualsSignKeyword_1()); }

	'=' 

{ after(grammarAccess.getSampleStatementAccess().getEqualsSignKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SampleStatement__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SampleStatement__Group__2__Impl
	rule__SampleStatement__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__SampleStatement__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSampleStatementAccess().getSAMPLEKeyword_2()); }

	'SAMPLE' 

{ after(grammarAccess.getSampleStatementAccess().getSAMPLEKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SampleStatement__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SampleStatement__Group__3__Impl
	rule__SampleStatement__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__SampleStatement__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSampleStatementAccess().getTypeAssignment_3()); }
(rule__SampleStatement__TypeAssignment_3)
{ after(grammarAccess.getSampleStatementAccess().getTypeAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SampleStatement__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SampleStatement__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SampleStatement__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSampleStatementAccess().getDOUBLENUMBERTerminalRuleCall_4()); }
	RULE_DOUBLENUMBER
{ after(grammarAccess.getSampleStatementAccess().getDOUBLENUMBERTerminalRuleCall_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__DistinctStatement__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DistinctStatement__Group__0__Impl
	rule__DistinctStatement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DistinctStatement__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDistinctStatementAccess().getNameAssignment_0()); }
(rule__DistinctStatement__NameAssignment_0)
{ after(grammarAccess.getDistinctStatementAccess().getNameAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DistinctStatement__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DistinctStatement__Group__1__Impl
	rule__DistinctStatement__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__DistinctStatement__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDistinctStatementAccess().getEqualsSignKeyword_1()); }

	'=' 

{ after(grammarAccess.getDistinctStatementAccess().getEqualsSignKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DistinctStatement__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DistinctStatement__Group__2__Impl
	rule__DistinctStatement__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__DistinctStatement__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDistinctStatementAccess().getDISTINCTKeyword_2()); }

	'DISTINCT' 

{ after(grammarAccess.getDistinctStatementAccess().getDISTINCTKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DistinctStatement__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DistinctStatement__Group__3__Impl
	rule__DistinctStatement__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__DistinctStatement__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDistinctStatementAccess().getTypeAssignment_3()); }
(rule__DistinctStatement__TypeAssignment_3)
{ after(grammarAccess.getDistinctStatementAccess().getTypeAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DistinctStatement__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DistinctStatement__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DistinctStatement__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDistinctStatementAccess().getPartition_clauseParserRuleCall_4()); }
(	rulepartition_clause)?
{ after(grammarAccess.getDistinctStatementAccess().getPartition_clauseParserRuleCall_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__StreamStatement__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StreamStatement__Group__0__Impl
	rule__StreamStatement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__StreamStatement__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStreamStatementAccess().getNameAssignment_0()); }
(rule__StreamStatement__NameAssignment_0)
{ after(grammarAccess.getStreamStatementAccess().getNameAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StreamStatement__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StreamStatement__Group__1__Impl
	rule__StreamStatement__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__StreamStatement__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStreamStatementAccess().getEqualsSignKeyword_1()); }

	'=' 

{ after(grammarAccess.getStreamStatementAccess().getEqualsSignKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StreamStatement__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StreamStatement__Group__2__Impl
	rule__StreamStatement__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__StreamStatement__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStreamStatementAccess().getSTREAMKeyword_2()); }

	'STREAM' 

{ after(grammarAccess.getStreamStatementAccess().getSTREAMKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StreamStatement__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StreamStatement__Group__3__Impl
	rule__StreamStatement__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__StreamStatement__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStreamStatementAccess().getTypeAssignment_3()); }
(rule__StreamStatement__TypeAssignment_3)
{ after(grammarAccess.getStreamStatementAccess().getTypeAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StreamStatement__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StreamStatement__Group__4__Impl
	rule__StreamStatement__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__StreamStatement__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStreamStatementAccess().getTHROUGHKeyword_4()); }

	'THROUGH' 

{ after(grammarAccess.getStreamStatementAccess().getTHROUGHKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StreamStatement__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StreamStatement__Group__5__Impl
	rule__StreamStatement__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__StreamStatement__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStreamStatementAccess().getAlternatives_5()); }
(rule__StreamStatement__Alternatives_5)
{ after(grammarAccess.getStreamStatementAccess().getAlternatives_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StreamStatement__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StreamStatement__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__StreamStatement__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStreamStatementAccess().getAsClauseParserRuleCall_6()); }
(	ruleAsClause)?
{ after(grammarAccess.getStreamStatementAccess().getAsClauseParserRuleCall_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}
















rule__MrStatement__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MrStatement__Group__0__Impl
	rule__MrStatement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MrStatement__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMrStatementAccess().getNameAssignment_0()); }
(rule__MrStatement__NameAssignment_0)
{ after(grammarAccess.getMrStatementAccess().getNameAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MrStatement__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MrStatement__Group__1__Impl
	rule__MrStatement__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__MrStatement__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMrStatementAccess().getEqualsSignKeyword_1()); }

	'=' 

{ after(grammarAccess.getMrStatementAccess().getEqualsSignKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MrStatement__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MrStatement__Group__2__Impl
	rule__MrStatement__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__MrStatement__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMrStatementAccess().getMAPREDUCEKeyword_2()); }

	'MAPREDUCE' 

{ after(grammarAccess.getMrStatementAccess().getMAPREDUCEKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MrStatement__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MrStatement__Group__3__Impl
	rule__MrStatement__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__MrStatement__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMrStatementAccess().getSTRINGTerminalRuleCall_3()); }
	RULE_STRING
{ after(grammarAccess.getMrStatementAccess().getSTRINGTerminalRuleCall_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MrStatement__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MrStatement__Group__4__Impl
	rule__MrStatement__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__MrStatement__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMrStatementAccess().getStoreStatementParserRuleCall_4()); }
	ruleStoreStatement
{ after(grammarAccess.getMrStatementAccess().getStoreStatementParserRuleCall_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MrStatement__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MrStatement__Group__5__Impl
	rule__MrStatement__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__MrStatement__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMrStatementAccess().getLoadAssignment_5()); }
(rule__MrStatement__LoadAssignment_5)
{ after(grammarAccess.getMrStatementAccess().getLoadAssignment_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MrStatement__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MrStatement__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MrStatement__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMrStatementAccess().getEXECCOMMANDTerminalRuleCall_6()); }
(	RULE_EXECCOMMAND)?
{ after(grammarAccess.getMrStatementAccess().getEXECCOMMANDTerminalRuleCall_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}
















rule__SplitStatement__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SplitStatement__Group__0__Impl
	rule__SplitStatement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SplitStatement__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSplitStatementAccess().getNameAssignment_0()); }
(rule__SplitStatement__NameAssignment_0)
{ after(grammarAccess.getSplitStatementAccess().getNameAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SplitStatement__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SplitStatement__Group__1__Impl
	rule__SplitStatement__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__SplitStatement__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSplitStatementAccess().getEqualsSignKeyword_1()); }

	'=' 

{ after(grammarAccess.getSplitStatementAccess().getEqualsSignKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SplitStatement__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SplitStatement__Group__2__Impl
	rule__SplitStatement__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__SplitStatement__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSplitStatementAccess().getSPLITKeyword_2()); }

	'SPLIT' 

{ after(grammarAccess.getSplitStatementAccess().getSPLITKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SplitStatement__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SplitStatement__Group__3__Impl
	rule__SplitStatement__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__SplitStatement__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSplitStatementAccess().getTypeAssignment_3()); }
(rule__SplitStatement__TypeAssignment_3)
{ after(grammarAccess.getSplitStatementAccess().getTypeAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SplitStatement__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SplitStatement__Group__4__Impl
	rule__SplitStatement__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__SplitStatement__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSplitStatementAccess().getINTOKeyword_4()); }

	'INTO' 

{ after(grammarAccess.getSplitStatementAccess().getINTOKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SplitStatement__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SplitStatement__Group__5__Impl
	rule__SplitStatement__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__SplitStatement__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSplitStatementAccess().getBranchesAssignment_5()); }
(rule__SplitStatement__BranchesAssignment_5)
{ after(grammarAccess.getSplitStatementAccess().getBranchesAssignment_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SplitStatement__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SplitStatement__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SplitStatement__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
(
{ before(grammarAccess.getSplitStatementAccess().getGroup_6()); }
(rule__SplitStatement__Group_6__0)
{ after(grammarAccess.getSplitStatementAccess().getGroup_6()); }
)
(
{ before(grammarAccess.getSplitStatementAccess().getGroup_6()); }
(rule__SplitStatement__Group_6__0)*
{ after(grammarAccess.getSplitStatementAccess().getGroup_6()); }
)
)

;
finally {
	restoreStackSize(stackSize);
}
















rule__SplitStatement__Group_6__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SplitStatement__Group_6__0__Impl
	rule__SplitStatement__Group_6__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SplitStatement__Group_6__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSplitStatementAccess().getCommaKeyword_6_0()); }

	',' 

{ after(grammarAccess.getSplitStatementAccess().getCommaKeyword_6_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SplitStatement__Group_6__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SplitStatement__Group_6__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SplitStatement__Group_6__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSplitStatementAccess().getBranchesAssignment_6_1()); }
(rule__SplitStatement__BranchesAssignment_6_1)
{ after(grammarAccess.getSplitStatementAccess().getBranchesAssignment_6_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__StoreStatement__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StoreStatement__Group__0__Impl
	rule__StoreStatement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__StoreStatement__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStoreStatementAccess().getSTOREKeyword_0()); }

	'STORE' 

{ after(grammarAccess.getStoreStatementAccess().getSTOREKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StoreStatement__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StoreStatement__Group__1__Impl
	rule__StoreStatement__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__StoreStatement__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStoreStatementAccess().getTypeAssignment_1()); }
(rule__StoreStatement__TypeAssignment_1)
{ after(grammarAccess.getStoreStatementAccess().getTypeAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StoreStatement__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StoreStatement__Group__2__Impl
	rule__StoreStatement__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__StoreStatement__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStoreStatementAccess().getINTOKeyword_2()); }

	'INTO' 

{ after(grammarAccess.getStoreStatementAccess().getINTOKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StoreStatement__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StoreStatement__Group__3__Impl
	rule__StoreStatement__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__StoreStatement__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStoreStatementAccess().getSTRINGTerminalRuleCall_3()); }
	RULE_STRING
{ after(grammarAccess.getStoreStatementAccess().getSTRINGTerminalRuleCall_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StoreStatement__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StoreStatement__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__StoreStatement__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStoreStatementAccess().getGroup_4()); }
(rule__StoreStatement__Group_4__0)?
{ after(grammarAccess.getStoreStatementAccess().getGroup_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__StoreStatement__Group_4__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StoreStatement__Group_4__0__Impl
	rule__StoreStatement__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__StoreStatement__Group_4__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStoreStatementAccess().getUSINGKeyword_4_0()); }

	'USING' 

{ after(grammarAccess.getStoreStatementAccess().getUSINGKeyword_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StoreStatement__Group_4__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StoreStatement__Group_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__StoreStatement__Group_4__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStoreStatementAccess().getFuncClauseParserRuleCall_4_1()); }
	ruleFuncClause
{ after(grammarAccess.getStoreStatementAccess().getFuncClauseParserRuleCall_4_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__DescribeStatement__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DescribeStatement__Group__0__Impl
	rule__DescribeStatement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DescribeStatement__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDescribeStatementAccess().getDESCRIBEKeyword_0()); }

	'DESCRIBE' 

{ after(grammarAccess.getDescribeStatementAccess().getDESCRIBEKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DescribeStatement__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DescribeStatement__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DescribeStatement__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDescribeStatementAccess().getTypeAssignment_1()); }
(rule__DescribeStatement__TypeAssignment_1)
{ after(grammarAccess.getDescribeStatementAccess().getTypeAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ExplainStatement__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExplainStatement__Group__0__Impl
	rule__ExplainStatement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExplainStatement__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExplainStatementAccess().getEXPLAINKeyword_0()); }

	'EXPLAIN' 

{ after(grammarAccess.getExplainStatementAccess().getEXPLAINKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ExplainStatement__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExplainStatement__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExplainStatement__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExplainStatementAccess().getTypeAssignment_1()); }
(rule__ExplainStatement__TypeAssignment_1)
{ after(grammarAccess.getExplainStatementAccess().getTypeAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__DumpStatement__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DumpStatement__Group__0__Impl
	rule__DumpStatement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DumpStatement__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDumpStatementAccess().getDUMPKeyword_0()); }

	'DUMP' 

{ after(grammarAccess.getDumpStatementAccess().getDUMPKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DumpStatement__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DumpStatement__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DumpStatement__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDumpStatementAccess().getTypeAssignment_1()); }
(rule__DumpStatement__TypeAssignment_1)
{ after(grammarAccess.getDumpStatementAccess().getTypeAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Condition__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Condition__Group__0__Impl
	rule__Condition__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Condition__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConditionAccess().getGroup_0()); }
(rule__Condition__Group_0__0)?
{ after(grammarAccess.getConditionAccess().getGroup_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Condition__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Condition__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Condition__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConditionAccess().getOrConditionParserRuleCall_1()); }
	ruleOrCondition
{ after(grammarAccess.getConditionAccess().getOrConditionParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Condition__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Condition__Group_0__0__Impl
	rule__Condition__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Condition__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConditionAccess().getLeftParenthesisKeyword_0_0()); }

	'(' 

{ after(grammarAccess.getConditionAccess().getLeftParenthesisKeyword_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Condition__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Condition__Group_0__1__Impl
	rule__Condition__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Condition__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConditionAccess().getTypeParserRuleCall_0_1()); }
	ruleType
{ after(grammarAccess.getConditionAccess().getTypeParserRuleCall_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Condition__Group_0__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Condition__Group_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Condition__Group_0__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConditionAccess().getRightParenthesisKeyword_0_2()); }

	')' 

{ after(grammarAccess.getConditionAccess().getRightParenthesisKeyword_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__OrCondition__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OrCondition__Group__0__Impl
	rule__OrCondition__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__OrCondition__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOrConditionAccess().getAndConditionParserRuleCall_0()); }
	ruleAndCondition
{ after(grammarAccess.getOrConditionAccess().getAndConditionParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__OrCondition__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OrCondition__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__OrCondition__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOrConditionAccess().getGroup_1()); }
(rule__OrCondition__Group_1__0)*
{ after(grammarAccess.getOrConditionAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__OrCondition__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OrCondition__Group_1__0__Impl
	rule__OrCondition__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__OrCondition__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOrConditionAccess().getOrConditionLeftAction_1_0()); }
(

)
{ after(grammarAccess.getOrConditionAccess().getOrConditionLeftAction_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__OrCondition__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OrCondition__Group_1__1__Impl
	rule__OrCondition__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__OrCondition__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOrConditionAccess().getORKeyword_1_1()); }

	'OR' 

{ after(grammarAccess.getOrConditionAccess().getORKeyword_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__OrCondition__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OrCondition__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__OrCondition__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOrConditionAccess().getRightAssignment_1_2()); }
(rule__OrCondition__RightAssignment_1_2)
{ after(grammarAccess.getOrConditionAccess().getRightAssignment_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__AndCondition__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AndCondition__Group__0__Impl
	rule__AndCondition__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AndCondition__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAndConditionAccess().getUnaryConditionParserRuleCall_0()); }
	ruleUnaryCondition
{ after(grammarAccess.getAndConditionAccess().getUnaryConditionParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AndCondition__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AndCondition__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AndCondition__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAndConditionAccess().getGroup_1()); }
(rule__AndCondition__Group_1__0)*
{ after(grammarAccess.getAndConditionAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__AndCondition__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AndCondition__Group_1__0__Impl
	rule__AndCondition__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AndCondition__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAndConditionAccess().getAndConditionLeftAction_1_0()); }
(

)
{ after(grammarAccess.getAndConditionAccess().getAndConditionLeftAction_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AndCondition__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AndCondition__Group_1__1__Impl
	rule__AndCondition__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AndCondition__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAndConditionAccess().getANDKeyword_1_1()); }

	'AND' 

{ after(grammarAccess.getAndConditionAccess().getANDKeyword_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AndCondition__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AndCondition__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AndCondition__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAndConditionAccess().getRightAssignment_1_2()); }
(rule__AndCondition__RightAssignment_1_2)
{ after(grammarAccess.getAndConditionAccess().getRightAssignment_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__UnaryCondition__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UnaryCondition__Group_0__0__Impl
	rule__UnaryCondition__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryCondition__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnaryConditionAccess().getLeftParenthesisKeyword_0_0()); }

	'(' 

{ after(grammarAccess.getUnaryConditionAccess().getLeftParenthesisKeyword_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__UnaryCondition__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UnaryCondition__Group_0__1__Impl
	rule__UnaryCondition__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryCondition__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnaryConditionAccess().getConditionParserRuleCall_0_1()); }
	ruleCondition
{ after(grammarAccess.getUnaryConditionAccess().getConditionParserRuleCall_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__UnaryCondition__Group_0__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UnaryCondition__Group_0__2__Impl
	rule__UnaryCondition__Group_0__3
;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryCondition__Group_0__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnaryConditionAccess().getGroup_0_2()); }
(rule__UnaryCondition__Group_0_2__0)?
{ after(grammarAccess.getUnaryConditionAccess().getGroup_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__UnaryCondition__Group_0__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UnaryCondition__Group_0__3__Impl
	rule__UnaryCondition__Group_0__4
;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryCondition__Group_0__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnaryConditionAccess().getRightParenthesisKeyword_0_3()); }

	')' 

{ after(grammarAccess.getUnaryConditionAccess().getRightParenthesisKeyword_0_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__UnaryCondition__Group_0__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UnaryCondition__Group_0__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryCondition__Group_0__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnaryConditionAccess().getGroup_0_4()); }
(rule__UnaryCondition__Group_0_4__0)?
{ after(grammarAccess.getUnaryConditionAccess().getGroup_0_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__UnaryCondition__Group_0_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UnaryCondition__Group_0_2__0__Impl
	rule__UnaryCondition__Group_0_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryCondition__Group_0_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnaryConditionAccess().getQuestionMarkKeyword_0_2_0()); }

	'?' 

{ after(grammarAccess.getUnaryConditionAccess().getQuestionMarkKeyword_0_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__UnaryCondition__Group_0_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UnaryCondition__Group_0_2__1__Impl
	rule__UnaryCondition__Group_0_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryCondition__Group_0_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnaryConditionAccess().getLeftExpAssignment_0_2_1()); }
(rule__UnaryCondition__LeftExpAssignment_0_2_1)
{ after(grammarAccess.getUnaryConditionAccess().getLeftExpAssignment_0_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__UnaryCondition__Group_0_2__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UnaryCondition__Group_0_2__2__Impl
	rule__UnaryCondition__Group_0_2__3
;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryCondition__Group_0_2__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnaryConditionAccess().getColonKeyword_0_2_2()); }

	':' 

{ after(grammarAccess.getUnaryConditionAccess().getColonKeyword_0_2_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__UnaryCondition__Group_0_2__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UnaryCondition__Group_0_2__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryCondition__Group_0_2__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnaryConditionAccess().getRightExpAssignment_0_2_3()); }
(rule__UnaryCondition__RightExpAssignment_0_2_3)
{ after(grammarAccess.getUnaryConditionAccess().getRightExpAssignment_0_2_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__UnaryCondition__Group_0_4__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UnaryCondition__Group_0_4__0__Impl
	rule__UnaryCondition__Group_0_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryCondition__Group_0_4__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnaryConditionAccess().getUnaryConditionLeftAction_0_4_0()); }
(

)
{ after(grammarAccess.getUnaryConditionAccess().getUnaryConditionLeftAction_0_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__UnaryCondition__Group_0_4__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UnaryCondition__Group_0_4__1__Impl
	rule__UnaryCondition__Group_0_4__2
;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryCondition__Group_0_4__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnaryConditionAccess().getPlusSignKeyword_0_4_1()); }

	'+' 

{ after(grammarAccess.getUnaryConditionAccess().getPlusSignKeyword_0_4_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__UnaryCondition__Group_0_4__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UnaryCondition__Group_0_4__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryCondition__Group_0_4__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnaryConditionAccess().getRightAssignment_0_4_2()); }
(rule__UnaryCondition__RightAssignment_0_4_2)
{ after(grammarAccess.getUnaryConditionAccess().getRightAssignment_0_4_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__UnaryCondition__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UnaryCondition__Group_1__0__Impl
	rule__UnaryCondition__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryCondition__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnaryConditionAccess().getTEParserRuleCall_1_0()); }
	ruleTE
{ after(grammarAccess.getUnaryConditionAccess().getTEParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__UnaryCondition__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UnaryCondition__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryCondition__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnaryConditionAccess().getGroup_1_1()); }
(rule__UnaryCondition__Group_1_1__0)?
{ after(grammarAccess.getUnaryConditionAccess().getGroup_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__UnaryCondition__Group_1_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UnaryCondition__Group_1_1__0__Impl
	rule__UnaryCondition__Group_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryCondition__Group_1_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnaryConditionAccess().getUnaryConditionLeftAction_1_1_0()); }
(

)
{ after(grammarAccess.getUnaryConditionAccess().getUnaryConditionLeftAction_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__UnaryCondition__Group_1_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UnaryCondition__Group_1_1__1__Impl
	rule__UnaryCondition__Group_1_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryCondition__Group_1_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnaryConditionAccess().getRel_opParserRuleCall_1_1_1()); }
	rulerel_op
{ after(grammarAccess.getUnaryConditionAccess().getRel_opParserRuleCall_1_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__UnaryCondition__Group_1_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UnaryCondition__Group_1_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryCondition__Group_1_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnaryConditionAccess().getRightAssignment_1_1_2()); }
(rule__UnaryCondition__RightAssignment_1_1_2)
{ after(grammarAccess.getUnaryConditionAccess().getRightAssignment_1_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__TE__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TE__Group__0__Impl
	rule__TE__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TE__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTEAccess().getExpressionParserRuleCall_0()); }
	ruleExpression
{ after(grammarAccess.getTEAccess().getExpressionParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TE__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TE__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TE__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTEAccess().getGroup_1()); }
(rule__TE__Group_1__0)?
{ after(grammarAccess.getTEAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__TE__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TE__Group_1__0__Impl
	rule__TE__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TE__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTEAccess().getISKeyword_1_0()); }

	'IS' 

{ after(grammarAccess.getTEAccess().getISKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TE__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TE__Group_1__1__Impl
	rule__TE__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__TE__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTEAccess().getNOTKeyword_1_1()); }
(
	'NOT' 
)?
{ after(grammarAccess.getTEAccess().getNOTKeyword_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TE__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TE__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TE__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTEAccess().getNULLKeyword_1_2()); }

	'NULL' 

{ after(grammarAccess.getTEAccess().getNULLKeyword_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Func_eval__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Func_eval__Group__0__Impl
	rule__Func_eval__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Func_eval__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunc_evalAccess().getFuncNameParserRuleCall_0()); }
	ruleFuncName
{ after(grammarAccess.getFunc_evalAccess().getFuncNameParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Func_eval__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Func_eval__Group__1__Impl
	rule__Func_eval__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Func_eval__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunc_evalAccess().getFunc_evalAction_1()); }
(

)
{ after(grammarAccess.getFunc_evalAccess().getFunc_evalAction_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Func_eval__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Func_eval__Group__2__Impl
	rule__Func_eval__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Func_eval__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunc_evalAccess().getLeftParenthesisKeyword_2()); }

	'(' 

{ after(grammarAccess.getFunc_evalAccess().getLeftParenthesisKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Func_eval__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Func_eval__Group__3__Impl
	rule__Func_eval__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Func_eval__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunc_evalAccess().getArg_listAssignment_3()); }
(rule__Func_eval__Arg_listAssignment_3)?
{ after(grammarAccess.getFunc_evalAccess().getArg_listAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Func_eval__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Func_eval__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Func_eval__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunc_evalAccess().getRightParenthesisKeyword_4()); }

	')' 

{ after(grammarAccess.getFunc_evalAccess().getRightParenthesisKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__Real_arg_list__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Real_arg_list__Group__0__Impl
	rule__Real_arg_list__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Real_arg_list__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReal_arg_listAccess().getArgsAssignment_0()); }
(rule__Real_arg_list__ArgsAssignment_0)
{ after(grammarAccess.getReal_arg_listAccess().getArgsAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Real_arg_list__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Real_arg_list__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Real_arg_list__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReal_arg_listAccess().getGroup_1()); }
(rule__Real_arg_list__Group_1__0)*
{ after(grammarAccess.getReal_arg_listAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Real_arg_list__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Real_arg_list__Group_1__0__Impl
	rule__Real_arg_list__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Real_arg_list__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReal_arg_listAccess().getCommaKeyword_1_0()); }

	',' 

{ after(grammarAccess.getReal_arg_listAccess().getCommaKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Real_arg_list__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Real_arg_list__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Real_arg_list__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReal_arg_listAccess().getArgsAssignment_1_1()); }
(rule__Real_arg_list__ArgsAssignment_1_1)
{ after(grammarAccess.getReal_arg_listAccess().getArgsAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Expression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expression__Group__0__Impl
	rule__Expression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionAccess().getNOTKeyword_0()); }
(
	'NOT' 
)?
{ after(grammarAccess.getExpressionAccess().getNOTKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Expression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionAccess().getAddExpressionParserRuleCall_1()); }
	ruleAddExpression
{ after(grammarAccess.getExpressionAccess().getAddExpressionParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__AddExpression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AddExpression__Group__0__Impl
	rule__AddExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AddExpression__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAddExpressionAccess().getMulti_exprParserRuleCall_0()); }
	rulemulti_expr
{ after(grammarAccess.getAddExpressionAccess().getMulti_exprParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AddExpression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AddExpression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AddExpression__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAddExpressionAccess().getGroup_1()); }
(rule__AddExpression__Group_1__0)*
{ after(grammarAccess.getAddExpressionAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__AddExpression__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AddExpression__Group_1__0__Impl
	rule__AddExpression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AddExpression__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAddExpressionAccess().getAlternatives_1_0()); }
(rule__AddExpression__Alternatives_1_0)
{ after(grammarAccess.getAddExpressionAccess().getAlternatives_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AddExpression__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AddExpression__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AddExpression__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAddExpressionAccess().getMul_expAssignment_1_1()); }
(rule__AddExpression__Mul_expAssignment_1_1)
{ after(grammarAccess.getAddExpressionAccess().getMul_expAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Multi_expr__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Multi_expr__Group__0__Impl
	rule__Multi_expr__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Multi_expr__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMulti_exprAccess().getCast_exprParserRuleCall_0()); }
	rulecast_expr
{ after(grammarAccess.getMulti_exprAccess().getCast_exprParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Multi_expr__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Multi_expr__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Multi_expr__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMulti_exprAccess().getGroup_1()); }
(rule__Multi_expr__Group_1__0)*
{ after(grammarAccess.getMulti_exprAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Multi_expr__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Multi_expr__Group_1__0__Impl
	rule__Multi_expr__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Multi_expr__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMulti_exprAccess().getAlternatives_1_0()); }
(rule__Multi_expr__Alternatives_1_0)
{ after(grammarAccess.getMulti_exprAccess().getAlternatives_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Multi_expr__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Multi_expr__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Multi_expr__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMulti_exprAccess().getMul_castAssignment_1_1()); }
(rule__Multi_expr__Mul_castAssignment_1_1)
{ after(grammarAccess.getMulti_exprAccess().getMul_castAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Var_expr__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Var_expr__Group__0__Impl
	rule__Var_expr__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Var_expr__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVar_exprAccess().getProjectable_exprParserRuleCall_0()); }
	ruleprojectable_expr
{ after(grammarAccess.getVar_exprAccess().getProjectable_exprParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Var_expr__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Var_expr__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Var_expr__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVar_exprAccess().getAlternatives_1()); }
(rule__Var_expr__Alternatives_1)*
{ after(grammarAccess.getVar_exprAccess().getAlternatives_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Dot_proj__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Dot_proj__Group__0__Impl
	rule__Dot_proj__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Dot_proj__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDot_projAccess().getAlternatives_0()); }
(rule__Dot_proj__Alternatives_0)
{ after(grammarAccess.getDot_projAccess().getAlternatives_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Dot_proj__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Dot_proj__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Dot_proj__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDot_projAccess().getCol_alias_or_indexParserRuleCall_1()); }
	rulecol_alias_or_index
{ after(grammarAccess.getDot_projAccess().getCol_alias_or_indexParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Col_index__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Col_index__Group__0__Impl
	rule__Col_index__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Col_index__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCol_indexAccess().getDOLLARParserRuleCall_0()); }
	ruleDOLLAR
{ after(grammarAccess.getCol_indexAccess().getDOLLARParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Col_index__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Col_index__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Col_index__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCol_indexAccess().getAlternatives_1()); }
(rule__Col_index__Alternatives_1)
{ after(grammarAccess.getCol_indexAccess().getAlternatives_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Pound_proj__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Pound_proj__Group__0__Impl
	rule__Pound_proj__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Pound_proj__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPound_projAccess().getPOUNDParserRuleCall_0()); }
	rulePOUND
{ after(grammarAccess.getPound_projAccess().getPOUNDParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Pound_proj__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Pound_proj__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Pound_proj__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPound_projAccess().getAlternatives_1()); }
(rule__Pound_proj__Alternatives_1)
{ after(grammarAccess.getPound_projAccess().getAlternatives_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}







rule__Neg_expr__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Neg_expr__Group__0__Impl
	rule__Neg_expr__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Neg_expr__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNeg_exprAccess().getHyphenMinusKeyword_0()); }

	'-' 

{ after(grammarAccess.getNeg_exprAccess().getHyphenMinusKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Neg_expr__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Neg_expr__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Neg_expr__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNeg_exprAccess().getCast_exprParserRuleCall_1()); }
	rulecast_expr
{ after(grammarAccess.getNeg_exprAccess().getCast_exprParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__FlattenGeneratedItem__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FlattenGeneratedItem__Group__0__Impl
	rule__FlattenGeneratedItem__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FlattenGeneratedItem__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFlattenGeneratedItemAccess().getAlternatives_0()); }
(rule__FlattenGeneratedItem__Alternatives_0)
{ after(grammarAccess.getFlattenGeneratedItemAccess().getAlternatives_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FlattenGeneratedItem__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FlattenGeneratedItem__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FlattenGeneratedItem__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFlattenGeneratedItemAccess().getGroup_1()); }
(rule__FlattenGeneratedItem__Group_1__0)?
{ after(grammarAccess.getFlattenGeneratedItemAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__FlattenGeneratedItem__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FlattenGeneratedItem__Group_1__0__Impl
	rule__FlattenGeneratedItem__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FlattenGeneratedItem__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFlattenGeneratedItemAccess().getASKeyword_1_0()); }

	'AS' 

{ after(grammarAccess.getFlattenGeneratedItemAccess().getASKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FlattenGeneratedItem__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FlattenGeneratedItem__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FlattenGeneratedItem__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFlattenGeneratedItemAccess().getAlternatives_1_1()); }
(rule__FlattenGeneratedItem__Alternatives_1_1)
{ after(grammarAccess.getFlattenGeneratedItemAccess().getAlternatives_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ParallelClause__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ParallelClause__Group__0__Impl
	rule__ParallelClause__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ParallelClause__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParallelClauseAccess().getPARALLELKeyword_0()); }

	'PARALLEL' 

{ after(grammarAccess.getParallelClauseAccess().getPARALLELKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ParallelClause__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ParallelClause__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ParallelClause__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParallelClauseAccess().getScalarIntParserRuleCall_1()); }
	rulescalarInt
{ after(grammarAccess.getParallelClauseAccess().getScalarIntParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__RegisterClause__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RegisterClause__Group__0__Impl
	rule__RegisterClause__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RegisterClause__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRegisterClauseAccess().getREGISTERKeyword_0()); }

	'REGISTER' 

{ after(grammarAccess.getRegisterClauseAccess().getREGISTERKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RegisterClause__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RegisterClause__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RegisterClause__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRegisterClauseAccess().getPathClauseParserRuleCall_1()); }
	rulePathClause
{ after(grammarAccess.getRegisterClauseAccess().getPathClauseParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__DefaultClause__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DefaultClause__Group__0__Impl
	rule__DefaultClause__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DefaultClause__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDefaultClauseAccess().getDEFAULTKeyword_0()); }

	'%DEFAULT' 

{ after(grammarAccess.getDefaultClauseAccess().getDEFAULTKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DefaultClause__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DefaultClause__Group__1__Impl
	rule__DefaultClause__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__DefaultClause__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDefaultClauseAccess().getNameAssignment_1()); }
(rule__DefaultClause__NameAssignment_1)
{ after(grammarAccess.getDefaultClauseAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DefaultClause__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DefaultClause__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DefaultClause__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDefaultClauseAccess().getSTRINGTerminalRuleCall_2()); }
	RULE_STRING
{ after(grammarAccess.getDefaultClauseAccess().getSTRINGTerminalRuleCall_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__DeclareClause__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DeclareClause__Group__0__Impl
	rule__DeclareClause__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DeclareClause__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDeclareClauseAccess().getDECLAREKeyword_0()); }

	'%DECLARE' 

{ after(grammarAccess.getDeclareClauseAccess().getDECLAREKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DeclareClause__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DeclareClause__Group__1__Impl
	rule__DeclareClause__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__DeclareClause__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDeclareClauseAccess().getNameAssignment_1()); }
(rule__DeclareClause__NameAssignment_1)
{ after(grammarAccess.getDeclareClauseAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DeclareClause__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DeclareClause__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DeclareClause__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDeclareClauseAccess().getSTRINGTerminalRuleCall_2()); }
	RULE_STRING
{ after(grammarAccess.getDeclareClauseAccess().getSTRINGTerminalRuleCall_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__DefineClause__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DefineClause__Group__0__Impl
	rule__DefineClause__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DefineClause__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDefineClauseAccess().getDEFINEKeyword_0()); }

	'DEFINE' 

{ after(grammarAccess.getDefineClauseAccess().getDEFINEKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DefineClause__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DefineClause__Group__1__Impl
	rule__DefineClause__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__DefineClause__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDefineClauseAccess().getNameAssignment_1()); }
(rule__DefineClause__NameAssignment_1)
{ after(grammarAccess.getDefineClauseAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DefineClause__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DefineClause__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DefineClause__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDefineClauseAccess().getFuncClauseParserRuleCall_2()); }
	ruleFuncClause
{ after(grammarAccess.getDefineClauseAccess().getFuncClauseParserRuleCall_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__LoadUsing__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LoadUsing__Group__0__Impl
	rule__LoadUsing__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LoadUsing__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLoadUsingAccess().getUSINGKeyword_0()); }

	'USING' 

{ after(grammarAccess.getLoadUsingAccess().getUSINGKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LoadUsing__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LoadUsing__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LoadUsing__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLoadUsingAccess().getFuncClauseParserRuleCall_1()); }
	ruleFuncClause
{ after(grammarAccess.getLoadUsingAccess().getFuncClauseParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__FuncClause__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FuncClause__Group__0__Impl
	rule__FuncClause__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FuncClause__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFuncClauseAccess().getFuncNameParserRuleCall_0()); }
	ruleFuncName
{ after(grammarAccess.getFuncClauseAccess().getFuncNameParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FuncClause__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FuncClause__Group__1__Impl
	rule__FuncClause__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__FuncClause__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFuncClauseAccess().getLeftParenthesisKeyword_1()); }

	'(' 

{ after(grammarAccess.getFuncClauseAccess().getLeftParenthesisKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FuncClause__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FuncClause__Group__2__Impl
	rule__FuncClause__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__FuncClause__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFuncClauseAccess().getSTRINGTerminalRuleCall_2()); }
(	RULE_STRING)?
{ after(grammarAccess.getFuncClauseAccess().getSTRINGTerminalRuleCall_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FuncClause__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FuncClause__Group__3__Impl
	rule__FuncClause__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__FuncClause__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFuncClauseAccess().getGroup_3()); }
(rule__FuncClause__Group_3__0)*
{ after(grammarAccess.getFuncClauseAccess().getGroup_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FuncClause__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FuncClause__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FuncClause__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFuncClauseAccess().getRightParenthesisKeyword_4()); }

	')' 

{ after(grammarAccess.getFuncClauseAccess().getRightParenthesisKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__FuncClause__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FuncClause__Group_3__0__Impl
	rule__FuncClause__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FuncClause__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFuncClauseAccess().getCommaKeyword_3_0()); }

	',' 

{ after(grammarAccess.getFuncClauseAccess().getCommaKeyword_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FuncClause__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FuncClause__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FuncClause__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFuncClauseAccess().getSTRINGTerminalRuleCall_3_1()); }
	RULE_STRING
{ after(grammarAccess.getFuncClauseAccess().getSTRINGTerminalRuleCall_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__AsClause__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AsClause__Group__0__Impl
	rule__AsClause__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AsClause__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAsClauseAccess().getASKeyword_0()); }

	'AS' 

{ after(grammarAccess.getAsClauseAccess().getASKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AsClause__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AsClause__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AsClause__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAsClauseAccess().getAlternatives_1()); }
(rule__AsClause__Alternatives_1)
{ after(grammarAccess.getAsClauseAccess().getAlternatives_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__AliasDef__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AliasDef__Group__0__Impl
	rule__AliasDef__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AliasDef__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAliasDefAccess().getAliasParserRuleCall_0()); }
	ruleAlias
{ after(grammarAccess.getAliasDefAccess().getAliasParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AliasDef__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AliasDef__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AliasDef__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAliasDefAccess().getGroup_1()); }
(rule__AliasDef__Group_1__0)?
{ after(grammarAccess.getAliasDefAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__AliasDef__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AliasDef__Group_1__0__Impl
	rule__AliasDef__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AliasDef__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAliasDefAccess().getColonKeyword_1_0()); }

	':' 

{ after(grammarAccess.getAliasDefAccess().getColonKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AliasDef__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AliasDef__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AliasDef__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAliasDefAccess().getTypeParserRuleCall_1_1()); }
	ruleType
{ after(grammarAccess.getAliasDefAccess().getTypeParserRuleCall_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__AliasDefList__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AliasDefList__Group__0__Impl
	rule__AliasDefList__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AliasDefList__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAliasDefListAccess().getLeftParenthesisKeyword_0()); }

	'(' 

{ after(grammarAccess.getAliasDefListAccess().getLeftParenthesisKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AliasDefList__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AliasDefList__Group__1__Impl
	rule__AliasDefList__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AliasDefList__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAliasDefListAccess().getAliasDefParserRuleCall_1()); }
	ruleAliasDef
{ after(grammarAccess.getAliasDefListAccess().getAliasDefParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AliasDefList__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AliasDefList__Group__2__Impl
	rule__AliasDefList__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__AliasDefList__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAliasDefListAccess().getGroup_2()); }
(rule__AliasDefList__Group_2__0)*
{ after(grammarAccess.getAliasDefListAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AliasDefList__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AliasDefList__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AliasDefList__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAliasDefListAccess().getRightParenthesisKeyword_3()); }

	')' 

{ after(grammarAccess.getAliasDefListAccess().getRightParenthesisKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__AliasDefList__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AliasDefList__Group_2__0__Impl
	rule__AliasDefList__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AliasDefList__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAliasDefListAccess().getCommaKeyword_2_0()); }

	',' 

{ after(grammarAccess.getAliasDefListAccess().getCommaKeyword_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AliasDefList__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AliasDefList__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AliasDefList__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAliasDefListAccess().getAliasDefParserRuleCall_2_1()); }
	ruleAliasDef
{ after(grammarAccess.getAliasDefListAccess().getAliasDefParserRuleCall_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__FieldDef__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FieldDef__Group__0__Impl
	rule__FieldDef__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FieldDef__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFieldDefAccess().getIDENTIFIERParserRuleCall_0()); }
	ruleIDENTIFIER
{ after(grammarAccess.getFieldDefAccess().getIDENTIFIERParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FieldDef__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FieldDef__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FieldDef__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFieldDefAccess().getGroup_1()); }
(rule__FieldDef__Group_1__0)?
{ after(grammarAccess.getFieldDefAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__FieldDef__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FieldDef__Group_1__0__Impl
	rule__FieldDef__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FieldDef__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFieldDefAccess().getColonKeyword_1_0()); }

	':' 

{ after(grammarAccess.getFieldDefAccess().getColonKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FieldDef__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FieldDef__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FieldDef__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFieldDefAccess().getTypeParserRuleCall_1_1()); }
	ruleType
{ after(grammarAccess.getFieldDefAccess().getTypeParserRuleCall_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__FieldFefList__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FieldFefList__Group__0__Impl
	rule__FieldFefList__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FieldFefList__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFieldFefListAccess().getLeftParenthesisKeyword_0()); }

	'(' 

{ after(grammarAccess.getFieldFefListAccess().getLeftParenthesisKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FieldFefList__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FieldFefList__Group__1__Impl
	rule__FieldFefList__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__FieldFefList__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFieldFefListAccess().getFieldDefParserRuleCall_1()); }
	ruleFieldDef
{ after(grammarAccess.getFieldFefListAccess().getFieldDefParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FieldFefList__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FieldFefList__Group__2__Impl
	rule__FieldFefList__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__FieldFefList__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFieldFefListAccess().getGroup_2()); }
(rule__FieldFefList__Group_2__0)*
{ after(grammarAccess.getFieldFefListAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FieldFefList__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FieldFefList__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FieldFefList__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFieldFefListAccess().getRightParenthesisKeyword_3()); }

	')' 

{ after(grammarAccess.getFieldFefListAccess().getRightParenthesisKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__FieldFefList__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FieldFefList__Group_2__0__Impl
	rule__FieldFefList__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FieldFefList__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFieldFefListAccess().getCommaKeyword_2_0()); }

	',' 

{ after(grammarAccess.getFieldFefListAccess().getCommaKeyword_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FieldFefList__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FieldFefList__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FieldFefList__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFieldFefListAccess().getFieldDefParserRuleCall_2_1()); }
	ruleFieldDef
{ after(grammarAccess.getFieldFefListAccess().getFieldDefParserRuleCall_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__TupleType__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TupleType__Group__0__Impl
	rule__TupleType__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TupleType__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTupleTypeAccess().getTUPLEKeyword_0()); }
(
	'TUPLE' 
)?
{ after(grammarAccess.getTupleTypeAccess().getTUPLEKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TupleType__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TupleType__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TupleType__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTupleTypeAccess().getAliasDefListParserRuleCall_1()); }
	ruleAliasDefList
{ after(grammarAccess.getTupleTypeAccess().getAliasDefListParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Bag_type__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Bag_type__Group__0__Impl
	rule__Bag_type__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Bag_type__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBag_typeAccess().getBAGKeyword_0()); }
(
	'BAG' 
)?
{ after(grammarAccess.getBag_typeAccess().getBAGKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Bag_type__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Bag_type__Group__1__Impl
	rule__Bag_type__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Bag_type__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBag_typeAccess().getLeftCurlyBracketKeyword_1()); }

	'{' 

{ after(grammarAccess.getBag_typeAccess().getLeftCurlyBracketKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Bag_type__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Bag_type__Group__2__Impl
	rule__Bag_type__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Bag_type__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBag_typeAccess().getGroup_2()); }
(rule__Bag_type__Group_2__0)?
{ after(grammarAccess.getBag_typeAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Bag_type__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Bag_type__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Bag_type__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBag_typeAccess().getRightCurlyBracketKeyword_3()); }

	'}' 

{ after(grammarAccess.getBag_typeAccess().getRightCurlyBracketKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__Bag_type__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Bag_type__Group_2__0__Impl
	rule__Bag_type__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Bag_type__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBag_typeAccess().getGroup_2_0()); }
(rule__Bag_type__Group_2_0__0)?
{ after(grammarAccess.getBag_typeAccess().getGroup_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Bag_type__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Bag_type__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Bag_type__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBag_typeAccess().getTupleTypeParserRuleCall_2_1()); }
	ruleTupleType
{ after(grammarAccess.getBag_typeAccess().getTupleTypeParserRuleCall_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Bag_type__Group_2_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Bag_type__Group_2_0__0__Impl
	rule__Bag_type__Group_2_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Bag_type__Group_2_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBag_typeAccess().getIDENTIFIERParserRuleCall_2_0_0()); }
	ruleIDENTIFIER
{ after(grammarAccess.getBag_typeAccess().getIDENTIFIERParserRuleCall_2_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Bag_type__Group_2_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Bag_type__Group_2_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Bag_type__Group_2_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBag_typeAccess().getColonKeyword_2_0_1()); }

	':' 

{ after(grammarAccess.getBag_typeAccess().getColonKeyword_2_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Group_item_list__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Group_item_list__Group__0__Impl
	rule__Group_item_list__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Group_item_list__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGroup_item_listAccess().getGroup_itemParserRuleCall_0()); }
	rulegroup_item
{ after(grammarAccess.getGroup_item_listAccess().getGroup_itemParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Group_item_list__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Group_item_list__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Group_item_list__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGroup_item_listAccess().getGroup_1()); }
(rule__Group_item_list__Group_1__0)*
{ after(grammarAccess.getGroup_item_listAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Group_item_list__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Group_item_list__Group_1__0__Impl
	rule__Group_item_list__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Group_item_list__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGroup_item_listAccess().getCOMMAParserRuleCall_1_0()); }
	ruleCOMMA
{ after(grammarAccess.getGroup_item_listAccess().getCOMMAParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Group_item_list__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Group_item_list__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Group_item_list__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGroup_item_listAccess().getItemsAssignment_1_1()); }
(rule__Group_item_list__ItemsAssignment_1_1)
{ after(grammarAccess.getGroup_item_listAccess().getItemsAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Order_by_clause__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Order_by_clause__Group_0__0__Impl
	rule__Order_by_clause__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Order_by_clause__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOrder_by_clauseAccess().getSTARParserRuleCall_0_0()); }
	ruleSTAR
{ after(grammarAccess.getOrder_by_clauseAccess().getSTARParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Order_by_clause__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Order_by_clause__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Order_by_clause__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOrder_by_clauseAccess().getAlternatives_0_1()); }
(rule__Order_by_clause__Alternatives_0_1)?
{ after(grammarAccess.getOrder_by_clauseAccess().getAlternatives_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Order_col_list__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Order_col_list__Group__0__Impl
	rule__Order_col_list__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Order_col_list__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOrder_col_listAccess().getOrder_colParserRuleCall_0()); }
	ruleorder_col
{ after(grammarAccess.getOrder_col_listAccess().getOrder_colParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Order_col_list__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Order_col_list__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Order_col_list__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOrder_col_listAccess().getGroup_1()); }
(rule__Order_col_list__Group_1__0)*
{ after(grammarAccess.getOrder_col_listAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Order_col_list__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Order_col_list__Group_1__0__Impl
	rule__Order_col_list__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Order_col_list__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOrder_col_listAccess().getCommaKeyword_1_0()); }

	',' 

{ after(grammarAccess.getOrder_col_listAccess().getCommaKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Order_col_list__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Order_col_list__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Order_col_list__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOrder_col_listAccess().getOrder_colParserRuleCall_1_1()); }
	ruleorder_col
{ after(grammarAccess.getOrder_col_listAccess().getOrder_colParserRuleCall_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Order_col__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Order_col__Group_0__0__Impl
	rule__Order_col__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Order_col__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOrder_colAccess().getCol_refParserRuleCall_0_0()); }
	rulecol_ref
{ after(grammarAccess.getOrder_colAccess().getCol_refParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Order_col__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Order_col__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Order_col__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOrder_colAccess().getAlternatives_0_1()); }
(rule__Order_col__Alternatives_0_1)?
{ after(grammarAccess.getOrder_colAccess().getAlternatives_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Order_col__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Order_col__Group_1__0__Impl
	rule__Order_col__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Order_col__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOrder_colAccess().getLeftParenthesisKeyword_1_0()); }

	'(' 

{ after(grammarAccess.getOrder_colAccess().getLeftParenthesisKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Order_col__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Order_col__Group_1__1__Impl
	rule__Order_col__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Order_col__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOrder_colAccess().getCol_refParserRuleCall_1_1()); }
	rulecol_ref
{ after(grammarAccess.getOrder_colAccess().getCol_refParserRuleCall_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Order_col__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Order_col__Group_1__2__Impl
	rule__Order_col__Group_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Order_col__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOrder_colAccess().getAlternatives_1_2()); }
(rule__Order_col__Alternatives_1_2)?
{ after(grammarAccess.getOrder_colAccess().getAlternatives_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Order_col__Group_1__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Order_col__Group_1__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Order_col__Group_1__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOrder_colAccess().getRightParenthesisKeyword_1_3()); }

	')' 

{ after(grammarAccess.getOrder_colAccess().getRightParenthesisKeyword_1_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__Partition_clause__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Partition_clause__Group__0__Impl
	rule__Partition_clause__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Partition_clause__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPartition_clauseAccess().getPARTITIONKeyword_0()); }

	'PARTITION' 

{ after(grammarAccess.getPartition_clauseAccess().getPARTITIONKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Partition_clause__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Partition_clause__Group__1__Impl
	rule__Partition_clause__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Partition_clause__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPartition_clauseAccess().getBYKeyword_1()); }

	'BY' 

{ after(grammarAccess.getPartition_clauseAccess().getBYKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Partition_clause__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Partition_clause__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Partition_clause__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPartition_clauseAccess().getFuncNameParserRuleCall_2()); }
	ruleFuncName
{ after(grammarAccess.getPartition_clauseAccess().getFuncNameParserRuleCall_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Rel_list__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Rel_list__Group__0__Impl
	rule__Rel_list__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Rel_list__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRel_listAccess().getTypeAssignment_0()); }
(rule__Rel_list__TypeAssignment_0)
{ after(grammarAccess.getRel_listAccess().getTypeAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Rel_list__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Rel_list__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Rel_list__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRel_listAccess().getGroup_1()); }
(rule__Rel_list__Group_1__0)*
{ after(grammarAccess.getRel_listAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Rel_list__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Rel_list__Group_1__0__Impl
	rule__Rel_list__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Rel_list__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRel_listAccess().getCommaKeyword_1_0()); }

	',' 

{ after(grammarAccess.getRel_listAccess().getCommaKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Rel_list__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Rel_list__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Rel_list__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRel_listAccess().getTypeAssignment_1_1()); }
(rule__Rel_list__TypeAssignment_1_1)
{ after(grammarAccess.getRel_listAccess().getTypeAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Join_sub_clause__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Join_sub_clause__Group__0__Impl
	rule__Join_sub_clause__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Join_sub_clause__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJoin_sub_clauseAccess().getJoin_itemParserRuleCall_0()); }
	rulejoin_item
{ after(grammarAccess.getJoin_sub_clauseAccess().getJoin_itemParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Join_sub_clause__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Join_sub_clause__Group__1__Impl
	rule__Join_sub_clause__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Join_sub_clause__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJoin_sub_clauseAccess().getAlternatives_1()); }
(rule__Join_sub_clause__Alternatives_1)?
{ after(grammarAccess.getJoin_sub_clauseAccess().getAlternatives_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Join_sub_clause__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Join_sub_clause__Group__2__Impl
	rule__Join_sub_clause__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Join_sub_clause__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJoin_sub_clauseAccess().getOUTERKeyword_2()); }
(
	'OUTER' 
)?
{ after(grammarAccess.getJoin_sub_clauseAccess().getOUTERKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Join_sub_clause__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Join_sub_clause__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Join_sub_clause__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
(
{ before(grammarAccess.getJoin_sub_clauseAccess().getGroup_3()); }
(rule__Join_sub_clause__Group_3__0)
{ after(grammarAccess.getJoin_sub_clauseAccess().getGroup_3()); }
)
(
{ before(grammarAccess.getJoin_sub_clauseAccess().getGroup_3()); }
(rule__Join_sub_clause__Group_3__0)*
{ after(grammarAccess.getJoin_sub_clauseAccess().getGroup_3()); }
)
)

;
finally {
	restoreStackSize(stackSize);
}










rule__Join_sub_clause__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Join_sub_clause__Group_3__0__Impl
	rule__Join_sub_clause__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Join_sub_clause__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJoin_sub_clauseAccess().getCommaKeyword_3_0()); }

	',' 

{ after(grammarAccess.getJoin_sub_clauseAccess().getCommaKeyword_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Join_sub_clause__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Join_sub_clause__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Join_sub_clause__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJoin_sub_clauseAccess().getOthersAssignment_3_1()); }
(rule__Join_sub_clause__OthersAssignment_3_1)
{ after(grammarAccess.getJoin_sub_clauseAccess().getOthersAssignment_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Join_item__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Join_item__Group__0__Impl
	rule__Join_item__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Join_item__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJoin_itemAccess().getTypeAssignment_0()); }
(rule__Join_item__TypeAssignment_0)
{ after(grammarAccess.getJoin_itemAccess().getTypeAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Join_item__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Join_item__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Join_item__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJoin_itemAccess().getExpressionsAssignment_1()); }
(rule__Join_item__ExpressionsAssignment_1)
{ after(grammarAccess.getJoin_itemAccess().getExpressionsAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Group_item__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Group_item__Group__0__Impl
	rule__Group_item__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Group_item__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGroup_itemAccess().getAlternatives_0()); }
(rule__Group_item__Alternatives_0)
{ after(grammarAccess.getGroup_itemAccess().getAlternatives_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Group_item__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Group_item__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Group_item__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGroup_itemAccess().getAlternatives_1()); }
(rule__Group_item__Alternatives_1)?
{ after(grammarAccess.getGroup_itemAccess().getAlternatives_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Group_item__Group_0_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Group_item__Group_0_0__0__Impl
	rule__Group_item__Group_0_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Group_item__Group_0_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGroup_itemAccess().getBYKeyword_0_0_0()); }

	'BY' 

{ after(grammarAccess.getGroup_itemAccess().getBYKeyword_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Group_item__Group_0_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Group_item__Group_0_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Group_item__Group_0_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGroup_itemAccess().getJoin_group_by_expr_listParserRuleCall_0_0_1()); }
	rulejoin_group_by_expr_list
{ after(grammarAccess.getGroup_itemAccess().getJoin_group_by_expr_listParserRuleCall_0_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Join_group_by_clause__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Join_group_by_clause__Group__0__Impl
	rule__Join_group_by_clause__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Join_group_by_clause__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJoin_group_by_clauseAccess().getBYKeyword_0()); }

	'BY' 

{ after(grammarAccess.getJoin_group_by_clauseAccess().getBYKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Join_group_by_clause__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Join_group_by_clause__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Join_group_by_clause__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJoin_group_by_clauseAccess().getJoin_group_by_expr_listParserRuleCall_1()); }
	rulejoin_group_by_expr_list
{ after(grammarAccess.getJoin_group_by_clauseAccess().getJoin_group_by_expr_listParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Join_group_by_expr_list__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Join_group_by_expr_list__Group_1__0__Impl
	rule__Join_group_by_expr_list__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Join_group_by_expr_list__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJoin_group_by_expr_listAccess().getLeftParenthesisKeyword_1_0()); }

	'(' 

{ after(grammarAccess.getJoin_group_by_expr_listAccess().getLeftParenthesisKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Join_group_by_expr_list__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Join_group_by_expr_list__Group_1__1__Impl
	rule__Join_group_by_expr_list__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Join_group_by_expr_list__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJoin_group_by_expr_listAccess().getLeftAssignment_1_1()); }
(rule__Join_group_by_expr_list__LeftAssignment_1_1)
{ after(grammarAccess.getJoin_group_by_expr_listAccess().getLeftAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Join_group_by_expr_list__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Join_group_by_expr_list__Group_1__2__Impl
	rule__Join_group_by_expr_list__Group_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Join_group_by_expr_list__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJoin_group_by_expr_listAccess().getGroup_1_2()); }
(rule__Join_group_by_expr_list__Group_1_2__0)*
{ after(grammarAccess.getJoin_group_by_expr_listAccess().getGroup_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Join_group_by_expr_list__Group_1__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Join_group_by_expr_list__Group_1__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Join_group_by_expr_list__Group_1__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJoin_group_by_expr_listAccess().getRightParenthesisKeyword_1_3()); }

	')' 

{ after(grammarAccess.getJoin_group_by_expr_listAccess().getRightParenthesisKeyword_1_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__Join_group_by_expr_list__Group_1_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Join_group_by_expr_list__Group_1_2__0__Impl
	rule__Join_group_by_expr_list__Group_1_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Join_group_by_expr_list__Group_1_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJoin_group_by_expr_listAccess().getCommaKeyword_1_2_0()); }

	',' 

{ after(grammarAccess.getJoin_group_by_expr_listAccess().getCommaKeyword_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Join_group_by_expr_list__Group_1_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Join_group_by_expr_list__Group_1_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Join_group_by_expr_list__Group_1_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJoin_group_by_expr_listAccess().getExpressionsAssignment_1_2_1()); }
(rule__Join_group_by_expr_list__ExpressionsAssignment_1_2_1)
{ after(grammarAccess.getJoin_group_by_expr_listAccess().getExpressionsAssignment_1_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Nested_blk__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Nested_blk__Group__0__Impl
	rule__Nested_blk__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Nested_blk__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNested_blkAccess().getLeftCurlyBracketKeyword_0()); }

	'{' 

{ after(grammarAccess.getNested_blkAccess().getLeftCurlyBracketKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Nested_blk__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Nested_blk__Group__1__Impl
	rule__Nested_blk__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Nested_blk__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNested_blkAccess().getNested_command_listParserRuleCall_1()); }
	rulenested_command_list
{ after(grammarAccess.getNested_blkAccess().getNested_command_listParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Nested_blk__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Nested_blk__Group__2__Impl
	rule__Nested_blk__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Nested_blk__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNested_blkAccess().getClausesAssignment_2()); }
(rule__Nested_blk__ClausesAssignment_2)
{ after(grammarAccess.getNested_blkAccess().getClausesAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Nested_blk__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Nested_blk__Group__3__Impl
	rule__Nested_blk__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Nested_blk__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNested_blkAccess().getSemicolonKeyword_3()); }

	';' 

{ after(grammarAccess.getNested_blkAccess().getSemicolonKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Nested_blk__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Nested_blk__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Nested_blk__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNested_blkAccess().getRightCurlyBracketKeyword_4()); }

	'}' 

{ after(grammarAccess.getNested_blkAccess().getRightCurlyBracketKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__Generate_clause__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Generate_clause__Group__0__Impl
	rule__Generate_clause__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Generate_clause__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGenerate_clauseAccess().getGENERATEKeyword_0()); }

	'GENERATE' 

{ after(grammarAccess.getGenerate_clauseAccess().getGENERATEKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Generate_clause__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Generate_clause__Group__1__Impl
	rule__Generate_clause__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Generate_clause__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGenerate_clauseAccess().getItemsAssignment_1()); }
(rule__Generate_clause__ItemsAssignment_1)
{ after(grammarAccess.getGenerate_clauseAccess().getItemsAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Generate_clause__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Generate_clause__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Generate_clause__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGenerate_clauseAccess().getGroup_2()); }
(rule__Generate_clause__Group_2__0)*
{ after(grammarAccess.getGenerate_clauseAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Generate_clause__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Generate_clause__Group_2__0__Impl
	rule__Generate_clause__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Generate_clause__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGenerate_clauseAccess().getCommaKeyword_2_0()); }

	',' 

{ after(grammarAccess.getGenerate_clauseAccess().getCommaKeyword_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Generate_clause__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Generate_clause__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Generate_clause__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGenerate_clauseAccess().getItemsAssignment_2_1()); }
(rule__Generate_clause__ItemsAssignment_2_1)
{ after(grammarAccess.getGenerate_clauseAccess().getItemsAssignment_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Nested_command_list__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Nested_command_list__Group__0__Impl
	rule__Nested_command_list__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Nested_command_list__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNested_command_listAccess().getNested_command_listAction_0()); }
(

)
{ after(grammarAccess.getNested_command_listAccess().getNested_command_listAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Nested_command_list__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Nested_command_list__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Nested_command_list__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNested_command_listAccess().getGroup_1()); }
(rule__Nested_command_list__Group_1__0)*
{ after(grammarAccess.getNested_command_listAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Nested_command_list__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Nested_command_list__Group_1__0__Impl
	rule__Nested_command_list__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Nested_command_list__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNested_command_listAccess().getCmdsAssignment_1_0()); }
(rule__Nested_command_list__CmdsAssignment_1_0)
{ after(grammarAccess.getNested_command_listAccess().getCmdsAssignment_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Nested_command_list__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Nested_command_list__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Nested_command_list__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNested_command_listAccess().getSEMI_COLONParserRuleCall_1_1()); }
	ruleSEMI_COLON
{ after(grammarAccess.getNested_command_listAccess().getSEMI_COLONParserRuleCall_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Nested_command__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Nested_command__Group__0__Impl
	rule__Nested_command__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Nested_command__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNested_commandAccess().getAliasParserRuleCall_0()); }
	ruleAlias
{ after(grammarAccess.getNested_commandAccess().getAliasParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Nested_command__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Nested_command__Group__1__Impl
	rule__Nested_command__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Nested_command__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNested_commandAccess().getEqualsSignKeyword_1()); }

	'=' 

{ after(grammarAccess.getNested_commandAccess().getEqualsSignKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Nested_command__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Nested_command__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Nested_command__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNested_commandAccess().getNested_opParserRuleCall_2()); }
	rulenested_op
{ after(grammarAccess.getNested_commandAccess().getNested_opParserRuleCall_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Nested_op__Group_4__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Nested_op__Group_4__0__Impl
	rule__Nested_op__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Nested_op__Group_4__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNested_opAccess().getGroup_4_0()); }
(rule__Nested_op__Group_4_0__0)?
{ after(grammarAccess.getNested_opAccess().getGroup_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Nested_op__Group_4__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Nested_op__Group_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Nested_op__Group_4__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNested_opAccess().getAddExpressionParserRuleCall_4_1()); }
	ruleAddExpression
{ after(grammarAccess.getNested_opAccess().getAddExpressionParserRuleCall_4_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Nested_op__Group_4_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Nested_op__Group_4_0__0__Impl
	rule__Nested_op__Group_4_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Nested_op__Group_4_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNested_opAccess().getLeftParenthesisKeyword_4_0_0()); }

	'(' 

{ after(grammarAccess.getNested_opAccess().getLeftParenthesisKeyword_4_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Nested_op__Group_4_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Nested_op__Group_4_0__1__Impl
	rule__Nested_op__Group_4_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Nested_op__Group_4_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNested_opAccess().getTypeParserRuleCall_4_0_1()); }
	ruleType
{ after(grammarAccess.getNested_opAccess().getTypeParserRuleCall_4_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Nested_op__Group_4_0__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Nested_op__Group_4_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Nested_op__Group_4_0__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNested_opAccess().getRightParenthesisKeyword_4_0_2()); }

	')' 

{ after(grammarAccess.getNested_opAccess().getRightParenthesisKeyword_4_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__NestedFilter__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NestedFilter__Group__0__Impl
	rule__NestedFilter__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__NestedFilter__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNestedFilterAccess().getFILTERKeyword_0()); }

	'FILTER' 

{ after(grammarAccess.getNestedFilterAccess().getFILTERKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__NestedFilter__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NestedFilter__Group__1__Impl
	rule__NestedFilter__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__NestedFilter__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNestedFilterAccess().getExpAssignment_1()); }
(rule__NestedFilter__ExpAssignment_1)
{ after(grammarAccess.getNestedFilterAccess().getExpAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__NestedFilter__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NestedFilter__Group__2__Impl
	rule__NestedFilter__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__NestedFilter__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNestedFilterAccess().getBYKeyword_2()); }

	'BY' 

{ after(grammarAccess.getNestedFilterAccess().getBYKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__NestedFilter__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NestedFilter__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__NestedFilter__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNestedFilterAccess().getCondAssignment_3()); }
(rule__NestedFilter__CondAssignment_3)
{ after(grammarAccess.getNestedFilterAccess().getCondAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__Nested_sort__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Nested_sort__Group__0__Impl
	rule__Nested_sort__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Nested_sort__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNested_sortAccess().getORDERKeyword_0()); }

	'ORDER' 

{ after(grammarAccess.getNested_sortAccess().getORDERKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Nested_sort__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Nested_sort__Group__1__Impl
	rule__Nested_sort__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Nested_sort__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNested_sortAccess().getVar_exprParserRuleCall_1()); }
	rulevar_expr
{ after(grammarAccess.getNested_sortAccess().getVar_exprParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Nested_sort__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Nested_sort__Group__2__Impl
	rule__Nested_sort__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Nested_sort__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNested_sortAccess().getBYKeyword_2()); }

	'BY' 

{ after(grammarAccess.getNested_sortAccess().getBYKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Nested_sort__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Nested_sort__Group__3__Impl
	rule__Nested_sort__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Nested_sort__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNested_sortAccess().getOrder_by_clauseParserRuleCall_3()); }
	ruleorder_by_clause
{ after(grammarAccess.getNested_sortAccess().getOrder_by_clauseParserRuleCall_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Nested_sort__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Nested_sort__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Nested_sort__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNested_sortAccess().getGroup_4()); }
(rule__Nested_sort__Group_4__0)?
{ after(grammarAccess.getNested_sortAccess().getGroup_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__Nested_sort__Group_4__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Nested_sort__Group_4__0__Impl
	rule__Nested_sort__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Nested_sort__Group_4__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNested_sortAccess().getUSINGKeyword_4_0()); }

	'USING' 

{ after(grammarAccess.getNested_sortAccess().getUSINGKeyword_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Nested_sort__Group_4__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Nested_sort__Group_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Nested_sort__Group_4__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNested_sortAccess().getFuncClauseParserRuleCall_4_1()); }
	ruleFuncClause
{ after(grammarAccess.getNested_sortAccess().getFuncClauseParserRuleCall_4_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Nested_distinct__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Nested_distinct__Group__0__Impl
	rule__Nested_distinct__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Nested_distinct__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNested_distinctAccess().getDISTINCTKeyword_0()); }

	'DISTINCT' 

{ after(grammarAccess.getNested_distinctAccess().getDISTINCTKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Nested_distinct__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Nested_distinct__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Nested_distinct__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNested_distinctAccess().getVar_exprParserRuleCall_1()); }
	rulevar_expr
{ after(grammarAccess.getNested_distinctAccess().getVar_exprParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Nested_limit__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Nested_limit__Group__0__Impl
	rule__Nested_limit__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Nested_limit__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNested_limitAccess().getLIMITKeyword_0()); }

	'LIMIT' 

{ after(grammarAccess.getNested_limitAccess().getLIMITKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Nested_limit__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Nested_limit__Group__1__Impl
	rule__Nested_limit__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Nested_limit__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNested_limitAccess().getVar_exprParserRuleCall_1()); }
	rulevar_expr
{ after(grammarAccess.getNested_limitAccess().getVar_exprParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Nested_limit__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Nested_limit__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Nested_limit__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNested_limitAccess().getAlternatives_2()); }
(rule__Nested_limit__Alternatives_2)
{ after(grammarAccess.getNested_limitAccess().getAlternatives_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Split_branch__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Split_branch__Group__0__Impl
	rule__Split_branch__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Split_branch__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSplit_branchAccess().getIDENTIFIERParserRuleCall_0()); }
	ruleIDENTIFIER
{ after(grammarAccess.getSplit_branchAccess().getIDENTIFIERParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Split_branch__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Split_branch__Group__1__Impl
	rule__Split_branch__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Split_branch__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSplit_branchAccess().getIFKeyword_1()); }

	'IF' 

{ after(grammarAccess.getSplit_branchAccess().getIFKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Split_branch__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Split_branch__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Split_branch__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSplit_branchAccess().getConditionParserRuleCall_2()); }
	ruleCondition
{ after(grammarAccess.getSplit_branchAccess().getConditionParserRuleCall_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Dollar_col_ref__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Dollar_col_ref__Group__0__Impl
	rule__Dollar_col_ref__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Dollar_col_ref__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDollar_col_refAccess().getDOLLARParserRuleCall_0()); }
	ruleDOLLAR
{ after(grammarAccess.getDollar_col_refAccess().getDOLLARParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Dollar_col_ref__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Dollar_col_ref__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Dollar_col_ref__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDollar_col_refAccess().getINTTerminalRuleCall_1()); }
	RULE_INT
{ after(grammarAccess.getDollar_col_refAccess().getINTTerminalRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ScalarInt__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ScalarInt__Group_3__0__Impl
	rule__ScalarInt__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ScalarInt__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getScalarIntAccess().getDollarSignKeyword_3_0()); }

	'$' 

{ after(grammarAccess.getScalarIntAccess().getDollarSignKeyword_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ScalarInt__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ScalarInt__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ScalarInt__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getScalarIntAccess().getIDTerminalRuleCall_3_1()); }
	RULE_ID
{ after(grammarAccess.getScalarIntAccess().getIDTerminalRuleCall_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}







rule__Query__ElementsAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQueryAccess().getElementsStatementParserRuleCall_0()); }
	ruleStatement{ after(grammarAccess.getQueryAccess().getElementsStatementParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__LoadStatement__NameAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLoadStatementAccess().getNameAliasParserRuleCall_0_0()); }
	ruleAlias{ after(grammarAccess.getLoadStatementAccess().getNameAliasParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ForeachStatement__NameAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getForeachStatementAccess().getNameAliasParserRuleCall_0_0()); }
	ruleAlias{ after(grammarAccess.getForeachStatementAccess().getNameAliasParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ForeachStatement__TypeAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getForeachStatementAccess().getTypeAliasTypeParserRuleCall_3_0()); }
	ruleAliasType{ after(grammarAccess.getForeachStatementAccess().getTypeAliasTypeParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ForeachStatement__ItemsAssignment_4_0_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getForeachStatementAccess().getItemsNested_blkParserRuleCall_4_0_0_0()); }
	rulenested_blk{ after(grammarAccess.getForeachStatementAccess().getItemsNested_blkParserRuleCall_4_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ForeachStatement__ItemsAssignment_4_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getForeachStatementAccess().getItemsGenerate_clauseParserRuleCall_4_1_0()); }
	rulegenerate_clause{ after(grammarAccess.getForeachStatementAccess().getItemsGenerate_clauseParserRuleCall_4_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FilterStatement__NameAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFilterStatementAccess().getNameAliasParserRuleCall_0_0()); }
	ruleAlias{ after(grammarAccess.getFilterStatementAccess().getNameAliasParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FilterStatement__TypeAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFilterStatementAccess().getTypeAliasTypeParserRuleCall_3_0()); }
	ruleAliasType{ after(grammarAccess.getFilterStatementAccess().getTypeAliasTypeParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FilterStatement__CondAssignment_5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFilterStatementAccess().getCondConditionParserRuleCall_5_0()); }
	ruleCondition{ after(grammarAccess.getFilterStatementAccess().getCondConditionParserRuleCall_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__GroupByStatement__NameAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGroupByStatementAccess().getNameAliasParserRuleCall_0_0()); }
	ruleAlias{ after(grammarAccess.getGroupByStatementAccess().getNameAliasParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__GroupByStatement__TypeAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGroupByStatementAccess().getTypeAliasTypeParserRuleCall_3_0()); }
	ruleAliasType{ after(grammarAccess.getGroupByStatementAccess().getTypeAliasTypeParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__GroupByStatement__ItemsAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGroupByStatementAccess().getItemsGroup_item_listParserRuleCall_4_0()); }
	rulegroup_item_list{ after(grammarAccess.getGroupByStatementAccess().getItemsGroup_item_listParserRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__CoGroupByStatement__NameAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCoGroupByStatementAccess().getNameAliasParserRuleCall_0_0()); }
	ruleAlias{ after(grammarAccess.getCoGroupByStatementAccess().getNameAliasParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__CoGroupByStatement__AliasesAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCoGroupByStatementAccess().getAliasesJoin_sub_clauseParserRuleCall_3_0()); }
	rulejoin_sub_clause{ after(grammarAccess.getCoGroupByStatementAccess().getAliasesJoin_sub_clauseParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__OrderStatement__NameAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOrderStatementAccess().getNameAliasParserRuleCall_0_0()); }
	ruleAlias{ after(grammarAccess.getOrderStatementAccess().getNameAliasParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__OrderStatement__TypeAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOrderStatementAccess().getTypeAliasTypeParserRuleCall_3_0()); }
	ruleAliasType{ after(grammarAccess.getOrderStatementAccess().getTypeAliasTypeParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__CrossStatement__NameAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCrossStatementAccess().getNameAliasParserRuleCall_0_0()); }
	ruleAlias{ after(grammarAccess.getCrossStatementAccess().getNameAliasParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__CrossStatement__AliasesAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCrossStatementAccess().getAliasesRel_listParserRuleCall_3_0()); }
	rulerel_list{ after(grammarAccess.getCrossStatementAccess().getAliasesRel_listParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__UnionStatement__NameAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnionStatementAccess().getNameAliasParserRuleCall_0_0()); }
	ruleAlias{ after(grammarAccess.getUnionStatementAccess().getNameAliasParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__UnionStatement__AliasesAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnionStatementAccess().getAliasesRel_listParserRuleCall_4_0()); }
	rulerel_list{ after(grammarAccess.getUnionStatementAccess().getAliasesRel_listParserRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__JoinStatement__NameAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJoinStatementAccess().getNameAliasParserRuleCall_0_0()); }
	ruleAlias{ after(grammarAccess.getJoinStatementAccess().getNameAliasParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__JoinStatement__AliasesAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJoinStatementAccess().getAliasesJoin_sub_clauseParserRuleCall_3_0()); }
	rulejoin_sub_clause{ after(grammarAccess.getJoinStatementAccess().getAliasesJoin_sub_clauseParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__LimitStatement__NameAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLimitStatementAccess().getNameAliasParserRuleCall_0_0()); }
	ruleAlias{ after(grammarAccess.getLimitStatementAccess().getNameAliasParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__LimitStatement__TypeAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLimitStatementAccess().getTypeAliasTypeParserRuleCall_3_0()); }
	ruleAliasType{ after(grammarAccess.getLimitStatementAccess().getTypeAliasTypeParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SampleStatement__NameAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSampleStatementAccess().getNameAliasParserRuleCall_0_0()); }
	ruleAlias{ after(grammarAccess.getSampleStatementAccess().getNameAliasParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SampleStatement__TypeAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSampleStatementAccess().getTypeAliasTypeParserRuleCall_3_0()); }
	ruleAliasType{ after(grammarAccess.getSampleStatementAccess().getTypeAliasTypeParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DistinctStatement__NameAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDistinctStatementAccess().getNameAliasParserRuleCall_0_0()); }
	ruleAlias{ after(grammarAccess.getDistinctStatementAccess().getNameAliasParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DistinctStatement__TypeAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDistinctStatementAccess().getTypeAliasTypeParserRuleCall_3_0()); }
	ruleAliasType{ after(grammarAccess.getDistinctStatementAccess().getTypeAliasTypeParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__StreamStatement__NameAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStreamStatementAccess().getNameAliasParserRuleCall_0_0()); }
	ruleAlias{ after(grammarAccess.getStreamStatementAccess().getNameAliasParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__StreamStatement__TypeAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStreamStatementAccess().getTypeAliasTypeParserRuleCall_3_0()); }
	ruleAliasType{ after(grammarAccess.getStreamStatementAccess().getTypeAliasTypeParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MrStatement__NameAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMrStatementAccess().getNameAliasParserRuleCall_0_0()); }
	ruleAlias{ after(grammarAccess.getMrStatementAccess().getNameAliasParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MrStatement__LoadAssignment_5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMrStatementAccess().getLoadLoadStatementParserRuleCall_5_0()); }
	ruleLoadStatement{ after(grammarAccess.getMrStatementAccess().getLoadLoadStatementParserRuleCall_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SplitStatement__NameAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSplitStatementAccess().getNameAliasParserRuleCall_0_0()); }
	ruleAlias{ after(grammarAccess.getSplitStatementAccess().getNameAliasParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SplitStatement__TypeAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSplitStatementAccess().getTypeAliasTypeParserRuleCall_3_0()); }
	ruleAliasType{ after(grammarAccess.getSplitStatementAccess().getTypeAliasTypeParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SplitStatement__BranchesAssignment_5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSplitStatementAccess().getBranchesSplit_branchParserRuleCall_5_0()); }
	rulesplit_branch{ after(grammarAccess.getSplitStatementAccess().getBranchesSplit_branchParserRuleCall_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SplitStatement__BranchesAssignment_6_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSplitStatementAccess().getBranchesSplit_branchParserRuleCall_6_1_0()); }
	rulesplit_branch{ after(grammarAccess.getSplitStatementAccess().getBranchesSplit_branchParserRuleCall_6_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__StoreStatement__TypeAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStoreStatementAccess().getTypeAliasTypeParserRuleCall_1_0()); }
	ruleAliasType{ after(grammarAccess.getStoreStatementAccess().getTypeAliasTypeParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DescribeStatement__TypeAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDescribeStatementAccess().getTypeAliasTypeParserRuleCall_1_0()); }
	ruleAliasType{ after(grammarAccess.getDescribeStatementAccess().getTypeAliasTypeParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ExplainStatement__TypeAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExplainStatementAccess().getTypeAliasTypeParserRuleCall_1_0()); }
	ruleAliasType{ after(grammarAccess.getExplainStatementAccess().getTypeAliasTypeParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DumpStatement__TypeAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDumpStatementAccess().getTypeAliasTypeParserRuleCall_1_0()); }
	ruleAliasType{ after(grammarAccess.getDumpStatementAccess().getTypeAliasTypeParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__OrCondition__RightAssignment_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOrConditionAccess().getRightAndConditionParserRuleCall_1_2_0()); }
	ruleAndCondition{ after(grammarAccess.getOrConditionAccess().getRightAndConditionParserRuleCall_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AndCondition__RightAssignment_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAndConditionAccess().getRightUnaryConditionParserRuleCall_1_2_0()); }
	ruleUnaryCondition{ after(grammarAccess.getAndConditionAccess().getRightUnaryConditionParserRuleCall_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryCondition__LeftExpAssignment_0_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnaryConditionAccess().getLeftExpConditionParserRuleCall_0_2_1_0()); }
	ruleCondition{ after(grammarAccess.getUnaryConditionAccess().getLeftExpConditionParserRuleCall_0_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryCondition__RightExpAssignment_0_2_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnaryConditionAccess().getRightExpConditionParserRuleCall_0_2_3_0()); }
	ruleCondition{ after(grammarAccess.getUnaryConditionAccess().getRightExpConditionParserRuleCall_0_2_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryCondition__RightAssignment_0_4_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnaryConditionAccess().getRightConditionParserRuleCall_0_4_2_0()); }
	ruleCondition{ after(grammarAccess.getUnaryConditionAccess().getRightConditionParserRuleCall_0_4_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryCondition__RightAssignment_1_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnaryConditionAccess().getRightTEParserRuleCall_1_1_2_0()); }
	ruleTE{ after(grammarAccess.getUnaryConditionAccess().getRightTEParserRuleCall_1_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Func_eval__Arg_listAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunc_evalAccess().getArg_listReal_arg_listParserRuleCall_3_0()); }
	rulereal_arg_list{ after(grammarAccess.getFunc_evalAccess().getArg_listReal_arg_listParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Real_arg_list__ArgsAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReal_arg_listAccess().getArgsReal_argParserRuleCall_0_0()); }
	rulereal_arg{ after(grammarAccess.getReal_arg_listAccess().getArgsReal_argParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Real_arg_list__ArgsAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReal_arg_listAccess().getArgsReal_argParserRuleCall_1_1_0()); }
	rulereal_arg{ after(grammarAccess.getReal_arg_listAccess().getArgsReal_argParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AddExpression__Mul_expAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAddExpressionAccess().getMul_expMulti_exprParserRuleCall_1_1_0()); }
	rulemulti_expr{ after(grammarAccess.getAddExpressionAccess().getMul_expMulti_exprParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Multi_expr__Mul_castAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMulti_exprAccess().getMul_castCast_exprParserRuleCall_1_1_0()); }
	rulecast_expr{ after(grammarAccess.getMulti_exprAccess().getMul_castCast_exprParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}



rule__AliasType__ReferencedAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAliasTypeAccess().getReferencedStatementCrossReference_0()); }
(
{ before(grammarAccess.getAliasTypeAccess().getReferencedStatementIDTerminalRuleCall_0_1()); }
	RULE_ID{ after(grammarAccess.getAliasTypeAccess().getReferencedStatementIDTerminalRuleCall_0_1()); }
)
{ after(grammarAccess.getAliasTypeAccess().getReferencedStatementCrossReference_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DefaultClause__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDefaultClauseAccess().getNameAliasParserRuleCall_1_0()); }
	ruleAlias{ after(grammarAccess.getDefaultClauseAccess().getNameAliasParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DeclareClause__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDeclareClauseAccess().getNameAliasParserRuleCall_1_0()); }
	ruleAlias{ after(grammarAccess.getDeclareClauseAccess().getNameAliasParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DefineClause__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDefineClauseAccess().getNameAliasParserRuleCall_1_0()); }
	ruleAlias{ after(grammarAccess.getDefineClauseAccess().getNameAliasParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Group_item_list__ItemsAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGroup_item_listAccess().getItemsGroup_itemParserRuleCall_1_1_0()); }
	rulegroup_item{ after(grammarAccess.getGroup_item_listAccess().getItemsGroup_itemParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Rel_list__TypeAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRel_listAccess().getTypeAliasTypeParserRuleCall_0_0()); }
	ruleAliasType{ after(grammarAccess.getRel_listAccess().getTypeAliasTypeParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Rel_list__TypeAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRel_listAccess().getTypeAliasTypeParserRuleCall_1_1_0()); }
	ruleAliasType{ after(grammarAccess.getRel_listAccess().getTypeAliasTypeParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Join_sub_clause__OthersAssignment_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJoin_sub_clauseAccess().getOthersJoin_itemParserRuleCall_3_1_0()); }
	rulejoin_item{ after(grammarAccess.getJoin_sub_clauseAccess().getOthersJoin_itemParserRuleCall_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Join_item__TypeAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJoin_itemAccess().getTypeAliasTypeParserRuleCall_0_0()); }
	ruleAliasType{ after(grammarAccess.getJoin_itemAccess().getTypeAliasTypeParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Join_item__ExpressionsAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJoin_itemAccess().getExpressionsJoin_group_by_clauseParserRuleCall_1_0()); }
	rulejoin_group_by_clause{ after(grammarAccess.getJoin_itemAccess().getExpressionsJoin_group_by_clauseParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Join_group_by_expr_list__LeftAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJoin_group_by_expr_listAccess().getLeftJoin_group_by_exprParserRuleCall_1_1_0()); }
	rulejoin_group_by_expr{ after(grammarAccess.getJoin_group_by_expr_listAccess().getLeftJoin_group_by_exprParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Join_group_by_expr_list__ExpressionsAssignment_1_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJoin_group_by_expr_listAccess().getExpressionsJoin_group_by_exprParserRuleCall_1_2_1_0()); }
	rulejoin_group_by_expr{ after(grammarAccess.getJoin_group_by_expr_listAccess().getExpressionsJoin_group_by_exprParserRuleCall_1_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Nested_blk__ClausesAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNested_blkAccess().getClausesGenerate_clauseParserRuleCall_2_0()); }
	rulegenerate_clause{ after(grammarAccess.getNested_blkAccess().getClausesGenerate_clauseParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Generate_clause__ItemsAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGenerate_clauseAccess().getItemsFlattenGeneratedItemParserRuleCall_1_0()); }
	ruleFlattenGeneratedItem{ after(grammarAccess.getGenerate_clauseAccess().getItemsFlattenGeneratedItemParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Generate_clause__ItemsAssignment_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGenerate_clauseAccess().getItemsFlattenGeneratedItemParserRuleCall_2_1_0()); }
	ruleFlattenGeneratedItem{ after(grammarAccess.getGenerate_clauseAccess().getItemsFlattenGeneratedItemParserRuleCall_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Nested_command_list__CmdsAssignment_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNested_command_listAccess().getCmdsNested_commandParserRuleCall_1_0_0()); }
	rulenested_command{ after(grammarAccess.getNested_command_listAccess().getCmdsNested_commandParserRuleCall_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__NestedFilter__ExpAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNestedFilterAccess().getExpVar_exprParserRuleCall_1_0()); }
	rulevar_expr{ after(grammarAccess.getNestedFilterAccess().getExpVar_exprParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__NestedFilter__CondAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNestedFilterAccess().getCondConditionParserRuleCall_3_0()); }
	ruleCondition{ after(grammarAccess.getNestedFilterAccess().getCondConditionParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


RULE_COGROUP_TYPE : '\'' 'merge' '\'';

RULE_SL_COMMENT : '--' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_DIGIT : '0'..'9';

RULE_LETTER : 'A'..'Z';

RULE_SPECIALCHAR : '_';

RULE_FLOATINGPOINT : RULE_DIGIT+ '.' RULE_DIGIT+;

RULE_LONGINTEGER : RULE_INT 'L';

RULE_DOUBLENUMBER : RULE_FLOATINGPOINT ('E' ('-'|'+')? RULE_INT)?;

RULE_EXECCOMMAND : '`' ~('`')* '`';

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' ('b'|'t'|'n'|'f'|'r'|'u'|'"'|'\''|'\\')|~(('\\'|'"')))* '"'|'\'' ('\\' ('b'|'t'|'n'|'f'|'r'|'u'|'"'|'\''|'\\')|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;


